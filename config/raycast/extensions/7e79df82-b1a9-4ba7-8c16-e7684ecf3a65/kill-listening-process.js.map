{
  "version": 3,
  "sources": ["../src/kill-listening-process.tsx"],
  "sourcesContent": ["import { LaunchProps, showToast, Toast } from \"@raycast/api\";\nimport { exec } from \"child_process\";\n\nfunction isInteger(str: string): boolean {\n  return Number.isInteger(parseInt(str, 10));\n}\n\nasync function run(command: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    exec(command, (error, stdout, stderr) => {\n      if (error) {\n        reject(stderr.trimEnd());\n      } else {\n        resolve(stdout.trimEnd());\n      }\n    });\n  });\n}\n\nexport default async function Command(\n  // \"Index\" here refers to the \"name\" property of this command\n  // specified in package.json AND matches the name of this source file.\n  props: LaunchProps<{ arguments: Arguments.KillListeningProcess }>\n) {\n  const { port } = props.arguments;\n  if (!isInteger(port)) {\n    showToast({\n      style: Toast.Style.Failure,\n      title: \"Bad Port\",\n      message: \"The port must be an integer.\",\n    });\n    return;\n  }\n\n  const command = `/usr/sbin/lsof -n -iTCP:${port} -sTCP:LISTEN -t`;\n\n  try {\n    const pid = await run(command);\n    await run(\"kill \" + pid);\n    showToast({\n      style: Toast.Style.Success,\n      title: \"Success\",\n      message: `Process ${pid} was killed.`,\n    });\n  } catch (error) {\n    showToast({\n      style: Toast.Style.Failure,\n      title: \"Error\",\n      message: `No process is listening on port ${port}.`,\n    });\n  }\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA8C,wBAC9CC,EAAqB,yBAErB,SAASC,EAAUC,EAAsB,CACvC,OAAO,OAAO,UAAU,SAASA,EAAK,EAAE,CAAC,CAC3C,CAEA,eAAeC,EAAIC,EAAkC,CACnD,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,IACtC,QAAKF,EAAS,CAACG,EAAOC,EAAQC,IAAW,CACnCF,EACFD,EAAOG,EAAO,QAAQ,CAAC,EAEvBJ,EAAQG,EAAO,QAAQ,CAAC,CAE5B,CAAC,CACH,CAAC,CACH,CAEA,eAAOX,EAGLa,EACA,CACA,GAAM,CAAE,KAAAC,CAAK,EAAID,EAAM,UACvB,GAAI,CAACT,EAAUU,CAAI,EAAG,IACpB,aAAU,CACR,MAAO,QAAM,MAAM,QACnB,MAAO,WACP,QAAS,8BACX,CAAC,EACD,MACF,CAEA,IAAMP,EAAU,2BAA2BO,CAAI,mBAE/C,GAAI,CACF,IAAMC,EAAM,MAAMT,EAAIC,CAAO,EAC7B,MAAMD,EAAI,QAAUS,CAAG,KACvB,aAAU,CACR,MAAO,QAAM,MAAM,QACnB,MAAO,UACP,QAAS,WAAWA,CAAG,cACzB,CAAC,CACH,MAAgB,IACd,aAAU,CACR,MAAO,QAAM,MAAM,QACnB,MAAO,QACP,QAAS,mCAAmCD,CAAI,GAClD,CAAC,CACH,CACF",
  "names": ["kill_listening_process_exports", "__export", "Command", "__toCommonJS", "import_api", "import_child_process", "isInteger", "str", "run", "command", "resolve", "reject", "error", "stdout", "stderr", "props", "port", "pid"]
}
