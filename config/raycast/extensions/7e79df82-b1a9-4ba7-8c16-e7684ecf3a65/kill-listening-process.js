"use strict";var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var g=Object.getOwnPropertyNames;var p=Object.prototype.hasOwnProperty;var f=(t,e)=>{for(var s in e)o(t,s,{get:e[s],enumerable:!0})},y=(t,e,s,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of g(e))!p.call(t,i)&&i!==s&&o(t,i,{get:()=>e[i],enumerable:!(r=u(e,i))||r.enumerable});return t};var P=t=>y(o({},"__esModule",{value:!0}),t);var S={};f(S,{default:()=>c});module.exports=P(S);var n=require("@raycast/api"),l=require("child_process");function d(t){return Number.isInteger(parseInt(t,10))}async function a(t){return new Promise((e,s)=>{(0,l.exec)(t,(r,i,m)=>{r?s(m.trimEnd()):e(i.trimEnd())})})}async function c(t){let{port:e}=t.arguments;if(!d(e)){(0,n.showToast)({style:n.Toast.Style.Failure,title:"Bad Port",message:"The port must be an integer."});return}let s=`/usr/sbin/lsof -n -iTCP:${e} -sTCP:LISTEN -t`;try{let r=await a(s);await a("kill "+r),(0,n.showToast)({style:n.Toast.Style.Success,title:"Success",message:`Process ${r} was killed.`})}catch{(0,n.showToast)({style:n.Toast.Style.Failure,title:"Error",message:`No process is listening on port ${e}.`})}}
