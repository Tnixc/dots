{
  "version": 3,
  "sources": ["../node_modules/is-docker/index.js", "../node_modules/is-wsl/index.js", "../node_modules/define-lazy-prop/index.js", "../node_modules/open/index.js", "../src/create-a-snippet.tsx", "../src/constants.ts", "../node_modules/js-base64/base64.mjs"],
  "sourcesContent": ["'use strict';\nconst fs = require('fs');\n\nlet isDocker;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nmodule.exports = () => {\n\tif (isDocker === undefined) {\n\t\tisDocker = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDocker;\n};\n", "'use strict';\nconst os = require('os');\nconst fs = require('fs');\nconst isDocker = require('is-docker');\n\nconst isWsl = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os.release().toLowerCase().includes('microsoft')) {\n\t\tif (isDocker()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft') ?\n\t\t\t!isDocker() : false;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nif (process.env.__IS_WSL_TEST__) {\n\tmodule.exports = isWsl;\n} else {\n\tmodule.exports = isWsl();\n}\n", "'use strict';\nmodule.exports = (object, propertyName, fn) => {\n\tconst define = value => Object.defineProperty(object, propertyName, {value, enumerable: true, writable: true});\n\n\tObject.defineProperty(object, propertyName, {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\tget() {\n\t\t\tconst result = fn();\n\t\t\tdefine(result);\n\t\t\treturn result;\n\t\t},\n\t\tset(value) {\n\t\t\tdefine(value);\n\t\t}\n\t});\n\n\treturn object;\n};\n", "const path = require('path');\nconst childProcess = require('child_process');\nconst {promises: fs, constants: fsConstants} = require('fs');\nconst isWsl = require('is-wsl');\nconst isDocker = require('is-docker');\nconst defineLazyProperty = require('define-lazy-prop');\n\n// Path to included `xdg-open`.\nconst localXdgOpenPath = path.join(__dirname, 'xdg-open');\n\nconst {platform, arch} = process;\n\n/**\nGet the mount point for fixed drives in WSL.\n\n@inner\n@returns {string} The mount point.\n*/\nconst getWslDrivesMountPoint = (() => {\n\t// Default value for \"root\" param\n\t// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n\tconst defaultMountPoint = '/mnt/';\n\n\tlet mountPoint;\n\n\treturn async function () {\n\t\tif (mountPoint) {\n\t\t\t// Return memoized mount point value\n\t\t\treturn mountPoint;\n\t\t}\n\n\t\tconst configFilePath = '/etc/wsl.conf';\n\n\t\tlet isConfigFileExists = false;\n\t\ttry {\n\t\t\tawait fs.access(configFilePath, fsConstants.F_OK);\n\t\t\tisConfigFileExists = true;\n\t\t} catch {}\n\n\t\tif (!isConfigFileExists) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tconst configContent = await fs.readFile(configFilePath, {encoding: 'utf8'});\n\t\tconst configMountPoint = /(?<!#.*)root\\s*=\\s*(?<mountPoint>.*)/g.exec(configContent);\n\n\t\tif (!configMountPoint) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tmountPoint = configMountPoint.groups.mountPoint.trim();\n\t\tmountPoint = mountPoint.endsWith('/') ? mountPoint : `${mountPoint}/`;\n\n\t\treturn mountPoint;\n\t};\n})();\n\nconst pTryEach = async (array, mapper) => {\n\tlet latestError;\n\n\tfor (const item of array) {\n\t\ttry {\n\t\t\treturn await mapper(item); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tlatestError = error;\n\t\t}\n\t}\n\n\tthrow latestError;\n};\n\nconst baseOpen = async options => {\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\tnewInstance: false,\n\t\tallowNonzeroExitCode: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(options.app)) {\n\t\treturn pTryEach(options.app, singleApp => baseOpen({\n\t\t\t...options,\n\t\t\tapp: singleApp\n\t\t}));\n\t}\n\n\tlet {name: app, arguments: appArguments = []} = options.app || {};\n\tappArguments = [...appArguments];\n\n\tif (Array.isArray(app)) {\n\t\treturn pTryEach(app, appName => baseOpen({\n\t\t\t...options,\n\t\t\tapp: {\n\t\t\t\tname: appName,\n\t\t\t\targuments: appArguments\n\t\t\t}\n\t\t}));\n\t}\n\n\tlet command;\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.newInstance) {\n\t\t\tcliArguments.push('--new');\n\t\t}\n\n\t\tif (app) {\n\t\t\tcliArguments.push('-a', app);\n\t\t}\n\t} else if (platform === 'win32' || (isWsl && !isDocker())) {\n\t\tconst mountPoint = await getWslDrivesMountPoint();\n\n\t\tcommand = isWsl ?\n\t\t\t`${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` :\n\t\t\t`${process.env.SYSTEMROOT}\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell`;\n\n\t\tcliArguments.push(\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'\u2013ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand'\n\t\t);\n\n\t\tif (!isWsl) {\n\t\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\t\t}\n\n\t\tconst encodedArguments = ['Start'];\n\n\t\tif (options.wait) {\n\t\t\tencodedArguments.push('-Wait');\n\t\t}\n\n\t\tif (app) {\n\t\t\t// Double quote with double quotes to ensure the inner quotes are passed through.\n\t\t\t// Inner quotes are delimited for PowerShell interpretation with backticks.\n\t\t\tencodedArguments.push(`\"\\`\"${app}\\`\"\"`, '-ArgumentList');\n\t\t\tif (options.target) {\n\t\t\t\tappArguments.unshift(options.target);\n\t\t\t}\n\t\t} else if (options.target) {\n\t\t\tencodedArguments.push(`\"${options.target}\"`);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tappArguments = appArguments.map(arg => `\"\\`\"${arg}\\`\"\"`);\n\t\t\tencodedArguments.push(appArguments.join(','));\n\t\t}\n\n\t\t// Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\t\toptions.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n\t} else {\n\t\tif (app) {\n\t\t\tcommand = app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait fs.access(localXdgOpenPath, fsConstants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron ||\n\t\t\t\tplatform === 'android' || isBundled || !exeLocalXdgOpen;\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tif (options.target) {\n\t\tcliArguments.push(options.target);\n\t}\n\n\tif (platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (options.allowNonzeroExitCode && exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n\nconst open = (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\ttarget\n\t});\n};\n\nconst openApp = (name, options) => {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError('Expected a `name`');\n\t}\n\n\tconst {arguments: appArguments = []} = options || {};\n\tif (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n\t\tthrow new TypeError('Expected `appArguments` as Array type');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\tapp: {\n\t\t\tname,\n\t\t\targuments: appArguments\n\t\t}\n\t});\n};\n\nfunction detectArchBinary(binary) {\n\tif (typeof binary === 'string' || Array.isArray(binary)) {\n\t\treturn binary;\n\t}\n\n\tconst {[arch]: archBinary} = binary;\n\n\tif (!archBinary) {\n\t\tthrow new Error(`${arch} is not supported`);\n\t}\n\n\treturn archBinary;\n}\n\nfunction detectPlatformBinary({[platform]: platformBinary}, {wsl}) {\n\tif (wsl && isWsl) {\n\t\treturn detectArchBinary(wsl);\n\t}\n\n\tif (!platformBinary) {\n\t\tthrow new Error(`${platform} is not supported`);\n\t}\n\n\treturn detectArchBinary(platformBinary);\n}\n\nconst apps = {};\n\ndefineLazyProperty(apps, 'chrome', () => detectPlatformBinary({\n\tdarwin: 'google chrome',\n\twin32: 'chrome',\n\tlinux: ['google-chrome', 'google-chrome-stable', 'chromium']\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n\t\tx64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe']\n\t}\n}));\n\ndefineLazyProperty(apps, 'firefox', () => detectPlatformBinary({\n\tdarwin: 'firefox',\n\twin32: 'C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe',\n\tlinux: 'firefox'\n}, {\n\twsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe'\n}));\n\ndefineLazyProperty(apps, 'edge', () => detectPlatformBinary({\n\tdarwin: 'microsoft edge',\n\twin32: 'msedge',\n\tlinux: ['microsoft-edge', 'microsoft-edge-dev']\n}, {\n\twsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe'\n}));\n\nopen.apps = apps;\nopen.openApp = openApp;\n\nmodule.exports = open;\n", "import { Form, ActionPanel, SubmitFormAction, closeMainWindow, showToast, ToastStyle } from \"@raycast/api\";\nimport { colors, languages } from \"./constants\";\nimport { useState } from \"react\";\nimport open from \"open\";\nimport { encodeURI } from \"js-base64\";\n\ninterface Values {\n  title: string;\n  background: string;\n  darkMode: string;\n  padding: string;\n  language: string;\n  snippet: string;\n  color: string;\n}\nconst defaultSnippet: Values = {\n  title: \"Untitled%201\",\n  background: \"true\",\n  darkMode: \"true\",\n  padding: \"16\",\n  language: \"auto\",\n  snippet: \"\",\n  color: \"candy\",\n};\n\nexport default function CreateSnippet() {\n  const [code, setCode] = useState<Values>(defaultSnippet);\n  const url = `https://ray.so/#theme=${code.color}&background=${code.background}&darkMode=${code.darkMode}&padding=${\n    code.padding\n  }&title=${code.title || \"Untitled%201\"}&code=${encodeURI(code.snippet)}&language=${code.language}`;\n\n  const handleSubmit = async () => {\n    if (!code.snippet) {\n      await showToast(ToastStyle.Failure, \"Missing Code\", \"Code cannot be empty\");\n      return;\n    }\n    open(url);\n    closeMainWindow();\n  };\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <SubmitFormAction title=\"Create Snippet\" onSubmit={handleSubmit} />\n        </ActionPanel>\n      }\n    >\n      <Form.TextField\n        id=\"title\"\n        title=\"Title\"\n        placeholder=\"Untitled 1\"\n        onChange={(title) => setCode({ ...code, title: title.replace(/ /g, \"%20\").trim() })}\n      />\n      <Form.TextArea\n        id=\"code\"\n        title=\"Code\"\n        placeholder=\"Paste your code here\"\n        onChange={(snippet) => setCode({ ...code, snippet })}\n      />\n      <Form.Separator />\n      <Form.Dropdown id=\"color\" title=\"Color\" storeValue onChange={(color) => setCode({ ...code, color })}>\n        {colors.map((el, idx) => (\n          <Form.Dropdown.Item\n            key={idx}\n            icon={{ source: `${el}.png` }}\n            value={el}\n            title={el.charAt(0).toUpperCase() + el.substring(1).toLowerCase()}\n          />\n        ))}\n      </Form.Dropdown>\n      <Form.Dropdown id=\"language\" title=\"Language\" storeValue onChange={(language) => setCode({ ...code, language })}>\n        {languages.map((el, idx) => (\n          <Form.Dropdown.Item key={idx} value={el.value} title={el.label} />\n        ))}\n      </Form.Dropdown>\n      <Form.Dropdown\n        id=\"background\"\n        title=\"Background\"\n        storeValue\n        onChange={(background) => setCode({ ...code, background })}\n      >\n        <Form.Dropdown.Item value=\"true\" title=\"Yes\" />\n        <Form.Dropdown.Item value=\"false\" title=\"No\" />\n      </Form.Dropdown>\n      <Form.Dropdown id=\"darkMode\" title=\"Dark Mode\" storeValue onChange={(darkMode) => setCode({ ...code, darkMode })}>\n        <Form.Dropdown.Item value=\"true\" title=\"Yes\" />\n        <Form.Dropdown.Item value=\"false\" title=\"No\" />\n      </Form.Dropdown>\n      <Form.Dropdown id=\"padding\" title=\"Padding\" storeValue onChange={(padding) => setCode({ ...code, padding })}>\n        <Form.Dropdown.Item value=\"16\" title=\"16\" />\n        <Form.Dropdown.Item value=\"32\" title=\"32\" />\n        <Form.Dropdown.Item value=\"64\" title=\"64\" />\n        <Form.Dropdown.Item value=\"128\" title=\"128\" />\n      </Form.Dropdown>\n    </Form>\n  );\n}\n", "export const colors = [\"candy\", \"breeze\", \"crimson\", \"falcon\", \"meadow\", \"midnight\", \"mono\", \"raindrop\", \"sunset\"];\n\nexport const languages = [\n  { label: \"Auto-Detect\", value: \"auto\" },\n  { label: \"Bash\", value: \"bash\" },\n  { label: \"C#\", value: \"csharp\" },\n  { label: \"Clojure\", value: \"Clojure\" },\n  { label: \"CoffeeScript\", value: \"coffeescript\" },\n  { label: \"Crystal\", value: \"crystal\" },\n  { label: \"CSS\", value: \"css\" },\n  { label: \"D\", value: \"d\" },\n  { label: \"Dart\", value: \"dart\" },\n  { label: \"Diff\", value: \"diff\" },\n  { label: \"Docker\", value: \"dockerfile\" },\n  { label: \"Elm\", value: \"elm\" },\n  { label: \"Erlang\", value: \"erlang\" },\n  { label: \"Fortran\", value: \"fortran\" },\n  { label: \"Gherkin\", value: \"gherkin\" },\n  { label: \"Go\", value: \"Go\" },\n  { label: \"Groovy\", value: \"groovy\" },\n  { label: \"Haskell\", value: \"haskell\" },\n  { label: \"Java\", value: \"java\" },\n  { label: \"Javascript\", value: \"javascript\" },\n  { label: \"JSON\", value: \"json\" },\n  { label: \"JSX\", value: \"jsx\" },\n  { label: \"Julia\", value: \"julia\" },\n  { label: \"Kotlin\", value: \"kotlin\" },\n  { label: \"LaTeX\", value: \"latex\" },\n  { label: \"Lisp\", value: \"lisp\" },\n  { label: \"Lua\", value: \"lua\" },\n  { label: \"Markdown\", value: \"markdown\" },\n  { label: \"MATLAB/Octave\", value: \"octave\" },\n  { label: \"NGINX\", value: \"nginx\" },\n  { label: \"Objective C\", value: \"objectivec\" },\n  { label: \"OCaml\", value: \"ocaml\" },\n  { label: \"Perl\", value: \"perl\" },\n  { label: \"PHP\", value: \"php\" },\n  { label: \"Powershell\", value: \"powershell\" },\n  { label: \"Python\", value: \"python\" },\n  { label: \"R\", value: \"r\" },\n  { label: \"Ruby\", value: \"ruby\" },\n  { label: \"Rust\", value: \"rust\" },\n  { label: \"Scala\", value: \"scala\" },\n  { label: \"Smalltalk\", value: \"smalltalk\" },\n  { label: \"Swift\", value: \"swift\" },\n  { label: \"Typescript\", value: \"typescript\" },\n  { label: \"Twig\", value: \"twig\" },\n  { label: \"Verilog\", value: \"verilog\" },\n  { label: \"VHDL\", value: \"vhdl\" },\n  { label: \"XQuery\", value: \"xquery\" },\n  { label: \"YAML\", value: \"yaml\" },\n];\n", "/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],
  "mappings": "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",
  "names": ["require_is_docker", "__commonJSMin", "exports", "module", "fs", "isDocker", "hasDockerEnv", "hasDockerCGroup", "require_is_wsl", "__commonJSMin", "exports", "module", "os", "fs", "isDocker", "isWsl", "require_define_lazy_prop", "__commonJSMin", "exports", "module", "object", "propertyName", "fn", "define", "value", "result", "require_open", "__commonJSMin", "exports", "module", "path", "childProcess", "fs", "fsConstants", "isWsl", "isDocker", "defineLazyProperty", "localXdgOpenPath", "platform", "arch", "getWslDrivesMountPoint", "defaultMountPoint", "mountPoint", "configFilePath", "isConfigFileExists", "configContent", "configMountPoint", "pTryEach", "array", "mapper", "latestError", "item", "error", "baseOpen", "options", "singleApp", "app", "appArguments", "appName", "command", "cliArguments", "childProcessOptions", "encodedArguments", "arg", "isBundled", "exeLocalXdgOpen", "subprocess", "resolve", "reject", "exitCode", "open", "target", "openApp", "name", "detectArchBinary", "binary", "archBinary", "detectPlatformBinary", "platformBinary", "wsl", "apps", "create_a_snippet_exports", "__export", "CreateSnippet", "__toCommonJS", "import_api", "colors", "languages", "import_react", "import_open", "_hasbtoa", "_hasBuffer", "_TD", "_TE", "b64ch", "b64chs", "b64tab", "a", "tab", "c", "i", "_fromCC", "_U8Afrom", "it", "fn", "x", "_mkUriSafe", "src", "m0", "btoaPolyfill", "bin", "u32", "c0", "c1", "c2", "asc", "pad", "b64chs", "_btoa", "_hasbtoa", "_hasBuffer", "_fromUint8Array", "u8a", "strs", "i", "l", "_fromCC", "cb_utob", "c", "cc", "_fromCC", "re_utob", "utob", "u", "_encode", "_hasBuffer", "s", "_TE", "_fromUint8Array", "_btoa", "encode", "src", "urlsafe", "_mkUriSafe", "encodeURI", "import_jsx_runtime", "defaultSnippet", "CreateSnippet", "code", "setCode", "url", "encodeURI", "open", "title", "snippet", "color", "colors", "el", "idx", "language", "languages", "background", "darkMode", "padding"]
}
