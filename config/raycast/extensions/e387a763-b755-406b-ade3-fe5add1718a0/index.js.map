{
  "version": 3,
  "sources": ["../node_modules/isexe/windows.js", "../node_modules/isexe/mode.js", "../node_modules/isexe/index.js", "../node_modules/which/which.js", "../node_modules/path-key/index.js", "../node_modules/cross-spawn/lib/util/resolveCommand.js", "../node_modules/cross-spawn/lib/util/escape.js", "../node_modules/shebang-regex/index.js", "../node_modules/shebang-command/index.js", "../node_modules/cross-spawn/lib/util/readShebang.js", "../node_modules/cross-spawn/lib/parse.js", "../node_modules/cross-spawn/lib/enoent.js", "../node_modules/cross-spawn/index.js", "../node_modules/strip-final-newline/index.js", "../node_modules/npm-run-path/index.js", "../node_modules/mimic-fn/index.js", "../node_modules/onetime/index.js", "../node_modules/human-signals/src/core.js", "../node_modules/human-signals/src/realtime.js", "../node_modules/human-signals/src/signals.js", "../node_modules/human-signals/src/main.js", "../node_modules/execa/lib/error.js", "../node_modules/execa/lib/stdio.js", "../node_modules/signal-exit/signals.js", "../node_modules/signal-exit/index.js", "../node_modules/execa/lib/kill.js", "../node_modules/is-stream/index.js", "../node_modules/get-stream/buffer-stream.js", "../node_modules/get-stream/index.js", "../node_modules/merge-stream/index.js", "../node_modules/execa/lib/stream.js", "../node_modules/execa/lib/promise.js", "../node_modules/execa/lib/command.js", "../node_modules/execa/index.js", "../src/index.tsx", "../node_modules/shell-history/index.js", "../node_modules/shell-env/index.js", "../node_modules/shell-env/node_modules/ansi-regex/index.js", "../node_modules/shell-env/node_modules/strip-ansi/index.js", "../node_modules/default-shell/index.js", "../node_modules/run-applescript/index.js", "../node_modules/raycast-toolkit/dist/Action.mjs", "../node_modules/raycast-toolkit/dist/usePersistentState.mjs"],
  "sourcesContent": ["module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction checkPathExt (path, options) {\n  var pathext = options.pathExt !== undefined ?\n    options.pathExt : process.env.PATHEXT\n\n  if (!pathext) {\n    return true\n  }\n\n  pathext = pathext.split(';')\n  if (pathext.indexOf('') !== -1) {\n    return true\n  }\n  for (var i = 0; i < pathext.length; i++) {\n    var p = pathext[i].toLowerCase()\n    if (p && path.substr(-p.length).toLowerCase() === p) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction checkStat (stat, path, options) {\n  if (!stat.isSymbolicLink() && !stat.isFile()) {\n    return false\n  }\n  return checkPathExt(path, options)\n}\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, path, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), path, options)\n}\n", "module.exports = isexe\nisexe.sync = sync\n\nvar fs = require('fs')\n\nfunction isexe (path, options, cb) {\n  fs.stat(path, function (er, stat) {\n    cb(er, er ? false : checkStat(stat, options))\n  })\n}\n\nfunction sync (path, options) {\n  return checkStat(fs.statSync(path), options)\n}\n\nfunction checkStat (stat, options) {\n  return stat.isFile() && checkMode(stat, options)\n}\n\nfunction checkMode (stat, options) {\n  var mod = stat.mode\n  var uid = stat.uid\n  var gid = stat.gid\n\n  var myUid = options.uid !== undefined ?\n    options.uid : process.getuid && process.getuid()\n  var myGid = options.gid !== undefined ?\n    options.gid : process.getgid && process.getgid()\n\n  var u = parseInt('100', 8)\n  var g = parseInt('010', 8)\n  var o = parseInt('001', 8)\n  var ug = u | g\n\n  var ret = (mod & o) ||\n    (mod & g) && gid === myGid ||\n    (mod & u) && uid === myUid ||\n    (mod & ug) && myUid === 0\n\n  return ret\n}\n", "var fs = require('fs')\nvar core\nif (process.platform === 'win32' || global.TESTING_WINDOWS) {\n  core = require('./windows.js')\n} else {\n  core = require('./mode.js')\n}\n\nmodule.exports = isexe\nisexe.sync = sync\n\nfunction isexe (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er)\n        } else {\n          resolve(is)\n        }\n      })\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null\n        is = false\n      }\n    }\n    cb(er, is)\n  })\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n", "const isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys'\n\nconst path = require('path')\nconst COLON = isWindows ? ';' : ':'\nconst isexe = require('isexe')\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' })\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    )\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : ''\n  const pathExt = isWindows ? pathExtExe.split(colon) : ['']\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('')\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n}\n\nconst which = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt\n    opt = {}\n  }\n  if (!opt)\n    opt = {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    resolve(subStep(p, i, 0))\n  })\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii]\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext)\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    })\n  })\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n}\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {}\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt)\n  const found = []\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i]\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw\n\n    const pCmd = path.join(pathPart, cmd)\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j]\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe })\n        if (is) {\n          if (opt.all)\n            found.push(cur)\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n}\n\nmodule.exports = which\nwhich.sync = whichSync\n", "'use strict';\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\nmodule.exports = pathKey;\n// TODO: Remove this for the next major release\nmodule.exports.default = pathKey;\n", "'use strict';\n\nconst path = require('path');\nconst which = require('which');\nconst getPathKey = require('path-key');\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nmodule.exports = resolveCommand;\n", "'use strict';\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\nmodule.exports.command = escapeCommand;\nmodule.exports.argument = escapeArgument;\n", "'use strict';\nmodule.exports = /^#!(.*)/;\n", "'use strict';\nconst shebangRegex = require('shebang-regex');\n\nmodule.exports = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n", "'use strict';\n\nconst fs = require('fs');\nconst shebangCommand = require('shebang-command');\n\nfunction readShebang(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, size, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nmodule.exports = readShebang;\n", "'use strict';\n\nconst path = require('path');\nconst resolveCommand = require('./util/resolveCommand');\nconst escape = require('./util/escape');\nconst readShebang = require('./util/readShebang');\n\nconst isWin = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nmodule.exports = parse;\n", "'use strict';\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed, 'spawn');\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nmodule.exports = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n", "'use strict';\n\nconst cp = require('child_process');\nconst parse = require('./lib/parse');\nconst enoent = require('./lib/enoent');\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n", "'use strict';\n\nmodule.exports = input => {\n\tconst LF = typeof input === 'string' ? '\\n' : '\\n'.charCodeAt();\n\tconst CR = typeof input === 'string' ? '\\r' : '\\r'.charCodeAt();\n\n\tif (input[input.length - 1] === LF) {\n\t\tinput = input.slice(0, input.length - 1);\n\t}\n\n\tif (input[input.length - 1] === CR) {\n\t\tinput = input.slice(0, input.length - 1);\n\t}\n\n\treturn input;\n};\n", "'use strict';\nconst path = require('path');\nconst pathKey = require('path-key');\n\nconst npmRunPath = options => {\n\toptions = {\n\t\tcwd: process.cwd(),\n\t\tpath: process.env[pathKey()],\n\t\texecPath: process.execPath,\n\t\t...options\n\t};\n\n\tlet previous;\n\tlet cwdPath = path.resolve(options.cwd);\n\tconst result = [];\n\n\twhile (previous !== cwdPath) {\n\t\tresult.push(path.join(cwdPath, 'node_modules/.bin'));\n\t\tprevious = cwdPath;\n\t\tcwdPath = path.resolve(cwdPath, '..');\n\t}\n\n\t// Ensure the running `node` binary is used\n\tconst execPathDir = path.resolve(options.cwd, options.execPath, '..');\n\tresult.push(execPathDir);\n\n\treturn result.concat(options.path).join(path.delimiter);\n};\n\nmodule.exports = npmRunPath;\n// TODO: Remove this for the next major release\nmodule.exports.default = npmRunPath;\n\nmodule.exports.env = options => {\n\toptions = {\n\t\tenv: process.env,\n\t\t...options\n\t};\n\n\tconst env = {...options.env};\n\tconst path = pathKey({env});\n\n\toptions.path = env[path];\n\tenv[path] = module.exports(options);\n\n\treturn env;\n};\n", "'use strict';\n\nconst mimicFn = (to, from) => {\n\tfor (const prop of Reflect.ownKeys(from)) {\n\t\tObject.defineProperty(to, prop, Object.getOwnPropertyDescriptor(from, prop));\n\t}\n\n\treturn to;\n};\n\nmodule.exports = mimicFn;\n// TODO: Remove this for the next major release\nmodule.exports.default = mimicFn;\n", "'use strict';\nconst mimicFn = require('mimic-fn');\n\nconst calledFunctions = new WeakMap();\n\nconst onetime = (function_, options = {}) => {\n\tif (typeof function_ !== 'function') {\n\t\tthrow new TypeError('Expected a function');\n\t}\n\n\tlet returnValue;\n\tlet callCount = 0;\n\tconst functionName = function_.displayName || function_.name || '<anonymous>';\n\n\tconst onetime = function (...arguments_) {\n\t\tcalledFunctions.set(onetime, ++callCount);\n\n\t\tif (callCount === 1) {\n\t\t\treturnValue = function_.apply(this, arguments_);\n\t\t\tfunction_ = null;\n\t\t} else if (options.throw === true) {\n\t\t\tthrow new Error(`Function \\`${functionName}\\` can only be called once`);\n\t\t}\n\n\t\treturn returnValue;\n\t};\n\n\tmimicFn(onetime, function_);\n\tcalledFunctions.set(onetime, callCount);\n\n\treturn onetime;\n};\n\nmodule.exports = onetime;\n// TODO: Remove this for the next major release\nmodule.exports.default = onetime;\n\nmodule.exports.callCount = function_ => {\n\tif (!calledFunctions.has(function_)) {\n\t\tthrow new Error(`The given function \\`${function_.name}\\` is not wrapped by the \\`onetime\\` package`);\n\t}\n\n\treturn calledFunctions.get(function_);\n};\n", "/* eslint-disable max-lines */\n// List of known process signals with information about them\nexport const SIGNALS = [\n  {\n    name: 'SIGHUP',\n    number: 1,\n    action: 'terminate',\n    description: 'Terminal closed',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGINT',\n    number: 2,\n    action: 'terminate',\n    description: 'User interruption with CTRL-C',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGQUIT',\n    number: 3,\n    action: 'core',\n    description: 'User interruption with CTRL-\\\\',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGILL',\n    number: 4,\n    action: 'core',\n    description: 'Invalid machine instruction',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGTRAP',\n    number: 5,\n    action: 'core',\n    description: 'Debugger breakpoint',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGABRT',\n    number: 6,\n    action: 'core',\n    description: 'Aborted',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGIOT',\n    number: 6,\n    action: 'core',\n    description: 'Aborted',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGBUS',\n    number: 7,\n    action: 'core',\n    description:\n      'Bus error due to misaligned, non-existing address or paging error',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGEMT',\n    number: 7,\n    action: 'terminate',\n    description: 'Command should be emulated but is not implemented',\n    standard: 'other',\n  },\n  {\n    name: 'SIGFPE',\n    number: 8,\n    action: 'core',\n    description: 'Floating point arithmetic error',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGKILL',\n    number: 9,\n    action: 'terminate',\n    description: 'Forced termination',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGUSR1',\n    number: 10,\n    action: 'terminate',\n    description: 'Application-specific signal',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGSEGV',\n    number: 11,\n    action: 'core',\n    description: 'Segmentation fault',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGUSR2',\n    number: 12,\n    action: 'terminate',\n    description: 'Application-specific signal',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGPIPE',\n    number: 13,\n    action: 'terminate',\n    description: 'Broken pipe or socket',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGALRM',\n    number: 14,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGTERM',\n    number: 15,\n    action: 'terminate',\n    description: 'Termination',\n    standard: 'ansi',\n  },\n  {\n    name: 'SIGSTKFLT',\n    number: 16,\n    action: 'terminate',\n    description: 'Stack is empty or overflowed',\n    standard: 'other',\n  },\n  {\n    name: 'SIGCHLD',\n    number: 17,\n    action: 'ignore',\n    description: 'Child process terminated, paused or unpaused',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGCLD',\n    number: 17,\n    action: 'ignore',\n    description: 'Child process terminated, paused or unpaused',\n    standard: 'other',\n  },\n  {\n    name: 'SIGCONT',\n    number: 18,\n    action: 'unpause',\n    description: 'Unpaused',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGSTOP',\n    number: 19,\n    action: 'pause',\n    description: 'Paused',\n    standard: 'posix',\n    forced: true,\n  },\n  {\n    name: 'SIGTSTP',\n    number: 20,\n    action: 'pause',\n    description: 'Paused using CTRL-Z or \"suspend\"',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGTTIN',\n    number: 21,\n    action: 'pause',\n    description: 'Background process cannot read terminal input',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGBREAK',\n    number: 21,\n    action: 'terminate',\n    description: 'User interruption with CTRL-BREAK',\n    standard: 'other',\n  },\n  {\n    name: 'SIGTTOU',\n    number: 22,\n    action: 'pause',\n    description: 'Background process cannot write to terminal output',\n    standard: 'posix',\n  },\n  {\n    name: 'SIGURG',\n    number: 23,\n    action: 'ignore',\n    description: 'Socket received out-of-band data',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGXCPU',\n    number: 24,\n    action: 'core',\n    description: 'Process timed out',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGXFSZ',\n    number: 25,\n    action: 'core',\n    description: 'File too big',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGVTALRM',\n    number: 26,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGPROF',\n    number: 27,\n    action: 'terminate',\n    description: 'Timeout or timer',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGWINCH',\n    number: 28,\n    action: 'ignore',\n    description: 'Terminal window size changed',\n    standard: 'bsd',\n  },\n  {\n    name: 'SIGIO',\n    number: 29,\n    action: 'terminate',\n    description: 'I/O is available',\n    standard: 'other',\n  },\n  {\n    name: 'SIGPOLL',\n    number: 29,\n    action: 'terminate',\n    description: 'Watched event',\n    standard: 'other',\n  },\n  {\n    name: 'SIGINFO',\n    number: 29,\n    action: 'ignore',\n    description: 'Request for process information',\n    standard: 'other',\n  },\n  {\n    name: 'SIGPWR',\n    number: 30,\n    action: 'terminate',\n    description: 'Device running out of power',\n    standard: 'systemv',\n  },\n  {\n    name: 'SIGSYS',\n    number: 31,\n    action: 'core',\n    description: 'Invalid system call',\n    standard: 'other',\n  },\n  {\n    name: 'SIGUNUSED',\n    number: 31,\n    action: 'terminate',\n    description: 'Invalid system call',\n    standard: 'other',\n  },\n]\n/* eslint-enable max-lines */\n", "// List of realtime signals with information about them\nexport const getRealtimeSignals = function() {\n  const length = SIGRTMAX - SIGRTMIN + 1\n  return Array.from({ length }, getRealtimeSignal)\n}\n\nconst getRealtimeSignal = function(value, index) {\n  return {\n    name: `SIGRT${index + 1}`,\n    number: SIGRTMIN + index,\n    action: 'terminate',\n    description: 'Application-specific signal (realtime)',\n    standard: 'posix',\n  }\n}\n\nconst SIGRTMIN = 34\nexport const SIGRTMAX = 64\n", "import { constants } from 'os'\n\nimport { SIGNALS } from './core.js'\nimport { getRealtimeSignals } from './realtime.js'\n\n// Retrieve list of know signals (including realtime) with information about\n// them\nexport const getSignals = function() {\n  const realtimeSignals = getRealtimeSignals()\n  const signals = [...SIGNALS, ...realtimeSignals].map(normalizeSignal)\n  return signals\n}\n\n// Normalize signal:\n//  - `number`: signal numbers are OS-specific. This is taken into account by\n//    `os.constants.signals`. However we provide a default `number` since some\n//     signals are not defined for some OS.\n//  - `forced`: set default to `false`\n//  - `supported`: set value\nconst normalizeSignal = function({\n  name,\n  number: defaultNumber,\n  description,\n  action,\n  forced = false,\n  standard,\n}) {\n  const {\n    signals: { [name]: constantSignal },\n  } = constants\n  const supported = constantSignal !== undefined\n  const number = supported ? constantSignal : defaultNumber\n  return { name, number, description, supported, action, forced, standard }\n}\n", "import { constants } from 'os'\n\nimport { getSignals } from './signals.js'\nimport { SIGRTMAX } from './realtime.js'\n\n// Retrieve `signalsByName`, an object mapping signal name to signal properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByName = function() {\n  const signals = getSignals()\n  return signals.reduce(getSignalByName, {})\n}\n\nconst getSignalByName = function(\n  signalByNameMemo,\n  { name, number, description, supported, action, forced, standard },\n) {\n  return {\n    ...signalByNameMemo,\n    [name]: { name, number, description, supported, action, forced, standard },\n  }\n}\n\nexport const signalsByName = getSignalsByName()\n\n// Retrieve `signalsByNumber`, an object mapping signal number to signal\n// properties.\n// We make sure the object is sorted by `number`.\nconst getSignalsByNumber = function() {\n  const signals = getSignals()\n  const length = SIGRTMAX + 1\n  const signalsA = Array.from({ length }, (value, number) =>\n    getSignalByNumber(number, signals),\n  )\n  return Object.assign({}, ...signalsA)\n}\n\nconst getSignalByNumber = function(number, signals) {\n  const signal = findSignalByNumber(number, signals)\n\n  if (signal === undefined) {\n    return {}\n  }\n\n  const { name, description, supported, action, forced, standard } = signal\n  return {\n    [number]: {\n      name,\n      number,\n      description,\n      supported,\n      action,\n      forced,\n      standard,\n    },\n  }\n}\n\n// Several signals might end up sharing the same number because of OS-specific\n// numbers, in which case those prevail.\nconst findSignalByNumber = function(number, signals) {\n  const signal = signals.find(({ name }) => constants.signals[name] === number)\n\n  if (signal !== undefined) {\n    return signal\n  }\n\n  return signals.find(signalA => signalA.number === number)\n}\n\nexport const signalsByNumber = getSignalsByNumber()\n", "'use strict';\nconst {signalsByName} = require('human-signals');\n\nconst getErrorPrefix = ({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled}) => {\n\tif (timedOut) {\n\t\treturn `timed out after ${timeout} milliseconds`;\n\t}\n\n\tif (isCanceled) {\n\t\treturn 'was canceled';\n\t}\n\n\tif (errorCode !== undefined) {\n\t\treturn `failed with ${errorCode}`;\n\t}\n\n\tif (signal !== undefined) {\n\t\treturn `was killed with ${signal} (${signalDescription})`;\n\t}\n\n\tif (exitCode !== undefined) {\n\t\treturn `failed with exit code ${exitCode}`;\n\t}\n\n\treturn 'failed';\n};\n\nconst makeError = ({\n\tstdout,\n\tstderr,\n\tall,\n\terror,\n\tsignal,\n\texitCode,\n\tcommand,\n\tescapedCommand,\n\ttimedOut,\n\tisCanceled,\n\tkilled,\n\tparsed: {options: {timeout}}\n}) => {\n\t// `signal` and `exitCode` emitted on `spawned.on('exit')` event can be `null`.\n\t// We normalize them to `undefined`\n\texitCode = exitCode === null ? undefined : exitCode;\n\tsignal = signal === null ? undefined : signal;\n\tconst signalDescription = signal === undefined ? undefined : signalsByName[signal].description;\n\n\tconst errorCode = error && error.code;\n\n\tconst prefix = getErrorPrefix({timedOut, timeout, errorCode, signal, signalDescription, exitCode, isCanceled});\n\tconst execaMessage = `Command ${prefix}: ${command}`;\n\tconst isError = Object.prototype.toString.call(error) === '[object Error]';\n\tconst shortMessage = isError ? `${execaMessage}\\n${error.message}` : execaMessage;\n\tconst message = [shortMessage, stderr, stdout].filter(Boolean).join('\\n');\n\n\tif (isError) {\n\t\terror.originalMessage = error.message;\n\t\terror.message = message;\n\t} else {\n\t\terror = new Error(message);\n\t}\n\n\terror.shortMessage = shortMessage;\n\terror.command = command;\n\terror.escapedCommand = escapedCommand;\n\terror.exitCode = exitCode;\n\terror.signal = signal;\n\terror.signalDescription = signalDescription;\n\terror.stdout = stdout;\n\terror.stderr = stderr;\n\n\tif (all !== undefined) {\n\t\terror.all = all;\n\t}\n\n\tif ('bufferedData' in error) {\n\t\tdelete error.bufferedData;\n\t}\n\n\terror.failed = true;\n\terror.timedOut = Boolean(timedOut);\n\terror.isCanceled = isCanceled;\n\terror.killed = killed && !timedOut;\n\n\treturn error;\n};\n\nmodule.exports = makeError;\n", "'use strict';\nconst aliases = ['stdin', 'stdout', 'stderr'];\n\nconst hasAlias = options => aliases.some(alias => options[alias] !== undefined);\n\nconst normalizeStdio = options => {\n\tif (!options) {\n\t\treturn;\n\t}\n\n\tconst {stdio} = options;\n\n\tif (stdio === undefined) {\n\t\treturn aliases.map(alias => options[alias]);\n\t}\n\n\tif (hasAlias(options)) {\n\t\tthrow new Error(`It's not possible to provide \\`stdio\\` in combination with one of ${aliases.map(alias => `\\`${alias}\\``).join(', ')}`);\n\t}\n\n\tif (typeof stdio === 'string') {\n\t\treturn stdio;\n\t}\n\n\tif (!Array.isArray(stdio)) {\n\t\tthrow new TypeError(`Expected \\`stdio\\` to be of type \\`string\\` or \\`Array\\`, got \\`${typeof stdio}\\``);\n\t}\n\n\tconst length = Math.max(stdio.length, aliases.length);\n\treturn Array.from({length}, (value, index) => stdio[index]);\n};\n\nmodule.exports = normalizeStdio;\n\n// `ipc` is pushed unless it is already present\nmodule.exports.node = options => {\n\tconst stdio = normalizeStdio(options);\n\n\tif (stdio === 'ipc') {\n\t\treturn 'ipc';\n\t}\n\n\tif (stdio === undefined || typeof stdio === 'string') {\n\t\treturn [stdio, stdio, stdio, 'ipc'];\n\t}\n\n\tif (stdio.includes('ipc')) {\n\t\treturn stdio;\n\t}\n\n\treturn [...stdio, 'ipc'];\n};\n", "// This is not the set of all possible signals.\n//\n// It IS, however, the set of all signals that trigger\n// an exit on either Linux or BSD systems.  Linux is a\n// superset of the signal names supported on BSD, and\n// the unknown signals just fail to register, so we can\n// catch that easily enough.\n//\n// Don't bother with SIGKILL.  It's uncatchable, which\n// means that we can't fire any callbacks anyway.\n//\n// If a user does happen to register a handler on a non-\n// fatal signal like SIGWINCH or something, and then\n// exit, it'll end up firing `process.emit('exit')`, so\n// the handler will be fired anyway.\n//\n// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n// artificially, inherently leave the process in a\n// state from which it is not safe to try and enter JS\n// listeners.\nmodule.exports = [\n  'SIGABRT',\n  'SIGALRM',\n  'SIGHUP',\n  'SIGINT',\n  'SIGTERM'\n]\n\nif (process.platform !== 'win32') {\n  module.exports.push(\n    'SIGVTALRM',\n    'SIGXCPU',\n    'SIGXFSZ',\n    'SIGUSR2',\n    'SIGTRAP',\n    'SIGSYS',\n    'SIGQUIT',\n    'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n  )\n}\n\nif (process.platform === 'linux') {\n  module.exports.push(\n    'SIGIO',\n    'SIGPOLL',\n    'SIGPWR',\n    'SIGSTKFLT',\n    'SIGUNUSED'\n  )\n}\n", "// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nvar process = global.process\n\nconst processOk = function (process) {\n  return process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function'\n}\n\n// some kind of non-node environment, just no-op\n/* istanbul ignore if */\nif (!processOk(process)) {\n  module.exports = function () {\n    return function () {}\n  }\n} else {\n  var assert = require('assert')\n  var signals = require('./signals.js')\n  var isWin = /^win/i.test(process.platform)\n\n  var EE = require('events')\n  /* istanbul ignore if */\n  if (typeof EE !== 'function') {\n    EE = EE.EventEmitter\n  }\n\n  var emitter\n  if (process.__signal_exit_emitter__) {\n    emitter = process.__signal_exit_emitter__\n  } else {\n    emitter = process.__signal_exit_emitter__ = new EE()\n    emitter.count = 0\n    emitter.emitted = {}\n  }\n\n  // Because this emitter is a global, we have to check to see if a\n  // previous version of this library failed to enable infinite listeners.\n  // I know what you're about to say.  But literally everything about\n  // signal-exit is a compromise with evil.  Get used to it.\n  if (!emitter.infinite) {\n    emitter.setMaxListeners(Infinity)\n    emitter.infinite = true\n  }\n\n  module.exports = function (cb, opts) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return function () {}\n    }\n    assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')\n\n    if (loaded === false) {\n      load()\n    }\n\n    var ev = 'exit'\n    if (opts && opts.alwaysLast) {\n      ev = 'afterexit'\n    }\n\n    var remove = function () {\n      emitter.removeListener(ev, cb)\n      if (emitter.listeners('exit').length === 0 &&\n          emitter.listeners('afterexit').length === 0) {\n        unload()\n      }\n    }\n    emitter.on(ev, cb)\n\n    return remove\n  }\n\n  var unload = function unload () {\n    if (!loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = false\n\n    signals.forEach(function (sig) {\n      try {\n        process.removeListener(sig, sigListeners[sig])\n      } catch (er) {}\n    })\n    process.emit = originalProcessEmit\n    process.reallyExit = originalProcessReallyExit\n    emitter.count -= 1\n  }\n  module.exports.unload = unload\n\n  var emit = function emit (event, code, signal) {\n    /* istanbul ignore if */\n    if (emitter.emitted[event]) {\n      return\n    }\n    emitter.emitted[event] = true\n    emitter.emit(event, code, signal)\n  }\n\n  // { <signal>: <listener fn>, ... }\n  var sigListeners = {}\n  signals.forEach(function (sig) {\n    sigListeners[sig] = function listener () {\n      /* istanbul ignore if */\n      if (!processOk(global.process)) {\n        return\n      }\n      // If there are no other listeners, an exit is coming!\n      // Simplest way: remove us and then re-send the signal.\n      // We know that this will kill the process, so we can\n      // safely emit now.\n      var listeners = process.listeners(sig)\n      if (listeners.length === emitter.count) {\n        unload()\n        emit('exit', null, sig)\n        /* istanbul ignore next */\n        emit('afterexit', null, sig)\n        /* istanbul ignore next */\n        if (isWin && sig === 'SIGHUP') {\n          // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n          // so use a supported signal instead\n          sig = 'SIGINT'\n        }\n        /* istanbul ignore next */\n        process.kill(process.pid, sig)\n      }\n    }\n  })\n\n  module.exports.signals = function () {\n    return signals\n  }\n\n  var loaded = false\n\n  var load = function load () {\n    if (loaded || !processOk(global.process)) {\n      return\n    }\n    loaded = true\n\n    // This is the number of onSignalExit's that are in play.\n    // It's important so that we can count the correct number of\n    // listeners on signals, and don't wait for the other one to\n    // handle it instead of us.\n    emitter.count += 1\n\n    signals = signals.filter(function (sig) {\n      try {\n        process.on(sig, sigListeners[sig])\n        return true\n      } catch (er) {\n        return false\n      }\n    })\n\n    process.emit = processEmit\n    process.reallyExit = processReallyExit\n  }\n  module.exports.load = load\n\n  var originalProcessReallyExit = process.reallyExit\n  var processReallyExit = function processReallyExit (code) {\n    /* istanbul ignore if */\n    if (!processOk(global.process)) {\n      return\n    }\n    process.exitCode = code || /* istanbul ignore next */ 0\n    emit('exit', process.exitCode, null)\n    /* istanbul ignore next */\n    emit('afterexit', process.exitCode, null)\n    /* istanbul ignore next */\n    originalProcessReallyExit.call(process, process.exitCode)\n  }\n\n  var originalProcessEmit = process.emit\n  var processEmit = function processEmit (ev, arg) {\n    if (ev === 'exit' && processOk(global.process)) {\n      /* istanbul ignore else */\n      if (arg !== undefined) {\n        process.exitCode = arg\n      }\n      var ret = originalProcessEmit.apply(this, arguments)\n      /* istanbul ignore next */\n      emit('exit', process.exitCode, null)\n      /* istanbul ignore next */\n      emit('afterexit', process.exitCode, null)\n      /* istanbul ignore next */\n      return ret\n    } else {\n      return originalProcessEmit.apply(this, arguments)\n    }\n  }\n}\n", "'use strict';\nconst os = require('os');\nconst onExit = require('signal-exit');\n\nconst DEFAULT_FORCE_KILL_TIMEOUT = 1000 * 5;\n\n// Monkey-patches `childProcess.kill()` to add `forceKillAfterTimeout` behavior\nconst spawnedKill = (kill, signal = 'SIGTERM', options = {}) => {\n\tconst killResult = kill(signal);\n\tsetKillTimeout(kill, signal, options, killResult);\n\treturn killResult;\n};\n\nconst setKillTimeout = (kill, signal, options, killResult) => {\n\tif (!shouldForceKill(signal, options, killResult)) {\n\t\treturn;\n\t}\n\n\tconst timeout = getForceKillAfterTimeout(options);\n\tconst t = setTimeout(() => {\n\t\tkill('SIGKILL');\n\t}, timeout);\n\n\t// Guarded because there's no `.unref()` when `execa` is used in the renderer\n\t// process in Electron. This cannot be tested since we don't run tests in\n\t// Electron.\n\t// istanbul ignore else\n\tif (t.unref) {\n\t\tt.unref();\n\t}\n};\n\nconst shouldForceKill = (signal, {forceKillAfterTimeout}, killResult) => {\n\treturn isSigterm(signal) && forceKillAfterTimeout !== false && killResult;\n};\n\nconst isSigterm = signal => {\n\treturn signal === os.constants.signals.SIGTERM ||\n\t\t(typeof signal === 'string' && signal.toUpperCase() === 'SIGTERM');\n};\n\nconst getForceKillAfterTimeout = ({forceKillAfterTimeout = true}) => {\n\tif (forceKillAfterTimeout === true) {\n\t\treturn DEFAULT_FORCE_KILL_TIMEOUT;\n\t}\n\n\tif (!Number.isFinite(forceKillAfterTimeout) || forceKillAfterTimeout < 0) {\n\t\tthrow new TypeError(`Expected the \\`forceKillAfterTimeout\\` option to be a non-negative integer, got \\`${forceKillAfterTimeout}\\` (${typeof forceKillAfterTimeout})`);\n\t}\n\n\treturn forceKillAfterTimeout;\n};\n\n// `childProcess.cancel()`\nconst spawnedCancel = (spawned, context) => {\n\tconst killResult = spawned.kill();\n\n\tif (killResult) {\n\t\tcontext.isCanceled = true;\n\t}\n};\n\nconst timeoutKill = (spawned, signal, reject) => {\n\tspawned.kill(signal);\n\treject(Object.assign(new Error('Timed out'), {timedOut: true, signal}));\n};\n\n// `timeout` option handling\nconst setupTimeout = (spawned, {timeout, killSignal = 'SIGTERM'}, spawnedPromise) => {\n\tif (timeout === 0 || timeout === undefined) {\n\t\treturn spawnedPromise;\n\t}\n\n\tlet timeoutId;\n\tconst timeoutPromise = new Promise((resolve, reject) => {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutKill(spawned, killSignal, reject);\n\t\t}, timeout);\n\t});\n\n\tconst safeSpawnedPromise = spawnedPromise.finally(() => {\n\t\tclearTimeout(timeoutId);\n\t});\n\n\treturn Promise.race([timeoutPromise, safeSpawnedPromise]);\n};\n\nconst validateTimeout = ({timeout}) => {\n\tif (timeout !== undefined && (!Number.isFinite(timeout) || timeout < 0)) {\n\t\tthrow new TypeError(`Expected the \\`timeout\\` option to be a non-negative integer, got \\`${timeout}\\` (${typeof timeout})`);\n\t}\n};\n\n// `cleanup` option handling\nconst setExitHandler = async (spawned, {cleanup, detached}, timedPromise) => {\n\tif (!cleanup || detached) {\n\t\treturn timedPromise;\n\t}\n\n\tconst removeExitHandler = onExit(() => {\n\t\tspawned.kill();\n\t});\n\n\treturn timedPromise.finally(() => {\n\t\tremoveExitHandler();\n\t});\n};\n\nmodule.exports = {\n\tspawnedKill,\n\tspawnedCancel,\n\tsetupTimeout,\n\tvalidateTimeout,\n\tsetExitHandler\n};\n", "'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n", "'use strict';\nconst {PassThrough: PassThroughStream} = require('stream');\n\nmodule.exports = options => {\n\toptions = {...options};\n\n\tconst {array} = options;\n\tlet {encoding} = options;\n\tconst isBuffer = encoding === 'buffer';\n\tlet objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || isBuffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (isBuffer) {\n\t\tencoding = null;\n\t}\n\n\tconst stream = new PassThroughStream({objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tlet length = 0;\n\tconst chunks = [];\n\n\tstream.on('data', chunk => {\n\t\tchunks.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlength = chunks.length;\n\t\t} else {\n\t\t\tlength += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = () => {\n\t\tif (array) {\n\t\t\treturn chunks;\n\t\t}\n\n\t\treturn isBuffer ? Buffer.concat(chunks, length) : chunks.join('');\n\t};\n\n\tstream.getBufferedLength = () => length;\n\n\treturn stream;\n};\n", "'use strict';\nconst {constants: BufferConstants} = require('buffer');\nconst stream = require('stream');\nconst {promisify} = require('util');\nconst bufferStream = require('./buffer-stream');\n\nconst streamPipelinePromisified = promisify(stream.pipeline);\n\nclass MaxBufferError extends Error {\n\tconstructor() {\n\t\tsuper('maxBuffer exceeded');\n\t\tthis.name = 'MaxBufferError';\n\t}\n}\n\nasync function getStream(inputStream, options) {\n\tif (!inputStream) {\n\t\tthrow new Error('Expected a stream');\n\t}\n\n\toptions = {\n\t\tmaxBuffer: Infinity,\n\t\t...options\n\t};\n\n\tconst {maxBuffer} = options;\n\tconst stream = bufferStream(options);\n\n\tawait new Promise((resolve, reject) => {\n\t\tconst rejectPromise = error => {\n\t\t\t// Don't retrieve an oversized buffer.\n\t\t\tif (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {\n\t\t\t\terror.bufferedData = stream.getBufferedValue();\n\t\t\t}\n\n\t\t\treject(error);\n\t\t};\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tawait streamPipelinePromisified(inputStream, stream);\n\t\t\t\tresolve();\n\t\t\t} catch (error) {\n\t\t\t\trejectPromise(error);\n\t\t\t}\n\t\t})();\n\n\t\tstream.on('data', () => {\n\t\t\tif (stream.getBufferedLength() > maxBuffer) {\n\t\t\t\trejectPromise(new MaxBufferError());\n\t\t\t}\n\t\t});\n\t});\n\n\treturn stream.getBufferedValue();\n}\n\nmodule.exports = getStream;\nmodule.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});\nmodule.exports.array = (stream, options) => getStream(stream, {...options, array: true});\nmodule.exports.MaxBufferError = MaxBufferError;\n", "'use strict';\n\nconst { PassThrough } = require('stream');\n\nmodule.exports = function (/*streams...*/) {\n  var sources = []\n  var output  = new PassThrough({objectMode: true})\n\n  output.setMaxListeners(0)\n\n  output.add = add\n  output.isEmpty = isEmpty\n\n  output.on('unpipe', remove)\n\n  Array.prototype.slice.call(arguments).forEach(add)\n\n  return output\n\n  function add (source) {\n    if (Array.isArray(source)) {\n      source.forEach(add)\n      return this\n    }\n\n    sources.push(source);\n    source.once('end', remove.bind(null, source))\n    source.once('error', output.emit.bind(output, 'error'))\n    source.pipe(output, {end: false})\n    return this\n  }\n\n  function isEmpty () {\n    return sources.length == 0;\n  }\n\n  function remove (source) {\n    sources = sources.filter(function (it) { return it !== source })\n    if (!sources.length && output.readable) { output.end() }\n  }\n}\n", "'use strict';\nconst isStream = require('is-stream');\nconst getStream = require('get-stream');\nconst mergeStream = require('merge-stream');\n\n// `input` option\nconst handleInput = (spawned, input) => {\n\t// Checking for stdin is workaround for https://github.com/nodejs/node/issues/26852\n\t// @todo remove `|| spawned.stdin === undefined` once we drop support for Node.js <=12.2.0\n\tif (input === undefined || spawned.stdin === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n};\n\n// `all` interleaves `stdout` and `stderr`\nconst makeAllStream = (spawned, {all}) => {\n\tif (!all || (!spawned.stdout && !spawned.stderr)) {\n\t\treturn;\n\t}\n\n\tconst mixed = mergeStream();\n\n\tif (spawned.stdout) {\n\t\tmixed.add(spawned.stdout);\n\t}\n\n\tif (spawned.stderr) {\n\t\tmixed.add(spawned.stderr);\n\t}\n\n\treturn mixed;\n};\n\n// On failure, `result.stdout|stderr|all` should contain the currently buffered stream\nconst getBufferedData = async (stream, streamPromise) => {\n\tif (!stream) {\n\t\treturn;\n\t}\n\n\tstream.destroy();\n\n\ttry {\n\t\treturn await streamPromise;\n\t} catch (error) {\n\t\treturn error.bufferedData;\n\t}\n};\n\nconst getStreamPromise = (stream, {encoding, buffer, maxBuffer}) => {\n\tif (!stream || !buffer) {\n\t\treturn;\n\t}\n\n\tif (encoding) {\n\t\treturn getStream(stream, {encoding, maxBuffer});\n\t}\n\n\treturn getStream.buffer(stream, {maxBuffer});\n};\n\n// Retrieve result of child process: exit code, signal, error, streams (stdout/stderr/all)\nconst getSpawnedResult = async ({stdout, stderr, all}, {encoding, buffer, maxBuffer}, processDone) => {\n\tconst stdoutPromise = getStreamPromise(stdout, {encoding, buffer, maxBuffer});\n\tconst stderrPromise = getStreamPromise(stderr, {encoding, buffer, maxBuffer});\n\tconst allPromise = getStreamPromise(all, {encoding, buffer, maxBuffer: maxBuffer * 2});\n\n\ttry {\n\t\treturn await Promise.all([processDone, stdoutPromise, stderrPromise, allPromise]);\n\t} catch (error) {\n\t\treturn Promise.all([\n\t\t\t{error, signal: error.signal, timedOut: error.timedOut},\n\t\t\tgetBufferedData(stdout, stdoutPromise),\n\t\t\tgetBufferedData(stderr, stderrPromise),\n\t\t\tgetBufferedData(all, allPromise)\n\t\t]);\n\t}\n};\n\nconst validateInputSync = ({input}) => {\n\tif (isStream(input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n};\n\nmodule.exports = {\n\thandleInput,\n\tmakeAllStream,\n\tgetSpawnedResult,\n\tvalidateInputSync\n};\n\n", "'use strict';\n\nconst nativePromisePrototype = (async () => {})().constructor.prototype;\nconst descriptors = ['then', 'catch', 'finally'].map(property => [\n\tproperty,\n\tReflect.getOwnPropertyDescriptor(nativePromisePrototype, property)\n]);\n\n// The return value is a mixin of `childProcess` and `Promise`\nconst mergePromise = (spawned, promise) => {\n\tfor (const [property, descriptor] of descriptors) {\n\t\t// Starting the main `promise` is deferred to avoid consuming streams\n\t\tconst value = typeof promise === 'function' ?\n\t\t\t(...args) => Reflect.apply(descriptor.value, promise(), args) :\n\t\t\tdescriptor.value.bind(promise);\n\n\t\tReflect.defineProperty(spawned, property, {...descriptor, value});\n\t}\n\n\treturn spawned;\n};\n\n// Use promises instead of `child_process` events\nconst getSpawnedPromise = spawned => {\n\treturn new Promise((resolve, reject) => {\n\t\tspawned.on('exit', (exitCode, signal) => {\n\t\t\tresolve({exitCode, signal});\n\t\t});\n\n\t\tspawned.on('error', error => {\n\t\t\treject(error);\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', error => {\n\t\t\t\treject(error);\n\t\t\t});\n\t\t}\n\t});\n};\n\nmodule.exports = {\n\tmergePromise,\n\tgetSpawnedPromise\n};\n\n", "'use strict';\nconst normalizeArgs = (file, args = []) => {\n\tif (!Array.isArray(args)) {\n\t\treturn [file];\n\t}\n\n\treturn [file, ...args];\n};\n\nconst NO_ESCAPE_REGEXP = /^[\\w.-]+$/;\nconst DOUBLE_QUOTES_REGEXP = /\"/g;\n\nconst escapeArg = arg => {\n\tif (typeof arg !== 'string' || NO_ESCAPE_REGEXP.test(arg)) {\n\t\treturn arg;\n\t}\n\n\treturn `\"${arg.replace(DOUBLE_QUOTES_REGEXP, '\\\\\"')}\"`;\n};\n\nconst joinCommand = (file, args) => {\n\treturn normalizeArgs(file, args).join(' ');\n};\n\nconst getEscapedCommand = (file, args) => {\n\treturn normalizeArgs(file, args).map(arg => escapeArg(arg)).join(' ');\n};\n\nconst SPACES_REGEXP = / +/g;\n\n// Handle `execa.command()`\nconst parseCommand = command => {\n\tconst tokens = [];\n\tfor (const token of command.trim().split(SPACES_REGEXP)) {\n\t\t// Allow spaces to be escaped by a backslash if not meant as a delimiter\n\t\tconst previousToken = tokens[tokens.length - 1];\n\t\tif (previousToken && previousToken.endsWith('\\\\')) {\n\t\t\t// Merge previous token with current one\n\t\t\ttokens[tokens.length - 1] = `${previousToken.slice(0, -1)} ${token}`;\n\t\t} else {\n\t\t\ttokens.push(token);\n\t\t}\n\t}\n\n\treturn tokens;\n};\n\nmodule.exports = {\n\tjoinCommand,\n\tgetEscapedCommand,\n\tparseCommand\n};\n", "'use strict';\nconst path = require('path');\nconst childProcess = require('child_process');\nconst crossSpawn = require('cross-spawn');\nconst stripFinalNewline = require('strip-final-newline');\nconst npmRunPath = require('npm-run-path');\nconst onetime = require('onetime');\nconst makeError = require('./lib/error');\nconst normalizeStdio = require('./lib/stdio');\nconst {spawnedKill, spawnedCancel, setupTimeout, validateTimeout, setExitHandler} = require('./lib/kill');\nconst {handleInput, getSpawnedResult, makeAllStream, validateInputSync} = require('./lib/stream');\nconst {mergePromise, getSpawnedPromise} = require('./lib/promise');\nconst {joinCommand, parseCommand, getEscapedCommand} = require('./lib/command');\n\nconst DEFAULT_MAX_BUFFER = 1000 * 1000 * 100;\n\nconst getEnv = ({env: envOption, extendEnv, preferLocal, localDir, execPath}) => {\n\tconst env = extendEnv ? {...process.env, ...envOption} : envOption;\n\n\tif (preferLocal) {\n\t\treturn npmRunPath.env({env, cwd: localDir, execPath});\n\t}\n\n\treturn env;\n};\n\nconst handleArguments = (file, args, options = {}) => {\n\tconst parsed = crossSpawn._parse(file, args, options);\n\tfile = parsed.command;\n\targs = parsed.args;\n\toptions = parsed.options;\n\n\toptions = {\n\t\tmaxBuffer: DEFAULT_MAX_BUFFER,\n\t\tbuffer: true,\n\t\tstripFinalNewline: true,\n\t\textendEnv: true,\n\t\tpreferLocal: false,\n\t\tlocalDir: options.cwd || process.cwd(),\n\t\texecPath: process.execPath,\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true,\n\t\tall: false,\n\t\twindowsHide: true,\n\t\t...options\n\t};\n\n\toptions.env = getEnv(options);\n\n\toptions.stdio = normalizeStdio(options);\n\n\tif (process.platform === 'win32' && path.basename(file, '.exe') === 'cmd') {\n\t\t// #116\n\t\targs.unshift('/q');\n\t}\n\n\treturn {file, args, options, parsed};\n};\n\nconst handleOutput = (options, value, error) => {\n\tif (typeof value !== 'string' && !Buffer.isBuffer(value)) {\n\t\t// When `execa.sync()` errors, we normalize it to '' to mimic `execa()`\n\t\treturn error === undefined ? undefined : '';\n\t}\n\n\tif (options.stripFinalNewline) {\n\t\treturn stripFinalNewline(value);\n\t}\n\n\treturn value;\n};\n\nconst execa = (file, args, options) => {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateTimeout(parsed.options);\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\t// Ensure the returned error is always both a promise and a child process\n\t\tconst dummySpawned = new childProcess.ChildProcess();\n\t\tconst errorPromise = Promise.reject(makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false\n\t\t}));\n\t\treturn mergePromise(dummySpawned, errorPromise);\n\t}\n\n\tconst spawnedPromise = getSpawnedPromise(spawned);\n\tconst timedPromise = setupTimeout(spawned, parsed.options, spawnedPromise);\n\tconst processDone = setExitHandler(spawned, parsed.options, timedPromise);\n\n\tconst context = {isCanceled: false};\n\n\tspawned.kill = spawnedKill.bind(null, spawned.kill.bind(spawned));\n\tspawned.cancel = spawnedCancel.bind(null, spawned, context);\n\n\tconst handlePromise = async () => {\n\t\tconst [{error, exitCode, signal, timedOut}, stdoutResult, stderrResult, allResult] = await getSpawnedResult(spawned, parsed.options, processDone);\n\t\tconst stdout = handleOutput(parsed.options, stdoutResult);\n\t\tconst stderr = handleOutput(parsed.options, stderrResult);\n\t\tconst all = handleOutput(parsed.options, allResult);\n\n\t\tif (error || exitCode !== 0 || signal !== null) {\n\t\t\tconst returnedError = makeError({\n\t\t\t\terror,\n\t\t\t\texitCode,\n\t\t\t\tsignal,\n\t\t\t\tstdout,\n\t\t\t\tstderr,\n\t\t\t\tall,\n\t\t\t\tcommand,\n\t\t\t\tescapedCommand,\n\t\t\t\tparsed,\n\t\t\t\ttimedOut,\n\t\t\t\tisCanceled: context.isCanceled,\n\t\t\t\tkilled: spawned.killed\n\t\t\t});\n\n\t\t\tif (!parsed.options.reject) {\n\t\t\t\treturn returnedError;\n\t\t\t}\n\n\t\t\tthrow returnedError;\n\t\t}\n\n\t\treturn {\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\texitCode: 0,\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\tall,\n\t\t\tfailed: false,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false\n\t\t};\n\t};\n\n\tconst handlePromiseOnce = onetime(handlePromise);\n\n\thandleInput(spawned, parsed.options.input);\n\n\tspawned.all = makeAllStream(spawned, parsed.options);\n\n\treturn mergePromise(spawned, handlePromiseOnce);\n};\n\nmodule.exports = execa;\n\nmodule.exports.sync = (file, args, options) => {\n\tconst parsed = handleArguments(file, args, options);\n\tconst command = joinCommand(file, args);\n\tconst escapedCommand = getEscapedCommand(file, args);\n\n\tvalidateInputSync(parsed.options);\n\n\tlet result;\n\ttry {\n\t\tresult = childProcess.spawnSync(parsed.file, parsed.args, parsed.options);\n\t} catch (error) {\n\t\tthrow makeError({\n\t\t\terror,\n\t\t\tstdout: '',\n\t\t\tstderr: '',\n\t\t\tall: '',\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: false,\n\t\t\tisCanceled: false,\n\t\t\tkilled: false\n\t\t});\n\t}\n\n\tconst stdout = handleOutput(parsed.options, result.stdout, result.error);\n\tconst stderr = handleOutput(parsed.options, result.stderr, result.error);\n\n\tif (result.error || result.status !== 0 || result.signal !== null) {\n\t\tconst error = makeError({\n\t\t\tstdout,\n\t\t\tstderr,\n\t\t\terror: result.error,\n\t\t\tsignal: result.signal,\n\t\t\texitCode: result.status,\n\t\t\tcommand,\n\t\t\tescapedCommand,\n\t\t\tparsed,\n\t\t\ttimedOut: result.error && result.error.code === 'ETIMEDOUT',\n\t\t\tisCanceled: false,\n\t\t\tkilled: result.signal !== null\n\t\t});\n\n\t\tif (!parsed.options.reject) {\n\t\t\treturn error;\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\treturn {\n\t\tcommand,\n\t\tescapedCommand,\n\t\texitCode: 0,\n\t\tstdout,\n\t\tstderr,\n\t\tfailed: false,\n\t\ttimedOut: false,\n\t\tisCanceled: false,\n\t\tkilled: false\n\t};\n};\n\nmodule.exports.command = (command, options) => {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa(file, args, options);\n};\n\nmodule.exports.commandSync = (command, options) => {\n\tconst [file, ...args] = parseCommand(command);\n\treturn execa.sync(file, args, options);\n};\n\nmodule.exports.node = (scriptPath, args, options = {}) => {\n\tif (args && !Array.isArray(args) && typeof args === 'object') {\n\t\toptions = args;\n\t\targs = [];\n\t}\n\n\tconst stdio = normalizeStdio.node(options);\n\tconst defaultExecArgv = process.execArgv.filter(arg => !arg.startsWith('--inspect'));\n\n\tconst {\n\t\tnodePath = process.execPath,\n\t\tnodeOptions = defaultExecArgv\n\t} = options;\n\n\treturn execa(\n\t\tnodePath,\n\t\t[\n\t\t\t...nodeOptions,\n\t\t\tscriptPath,\n\t\t\t...(Array.isArray(args) ? args : [])\n\t\t],\n\t\t{\n\t\t\t...options,\n\t\t\tstdin: undefined,\n\t\t\tstdout: undefined,\n\t\t\tstderr: undefined,\n\t\t\tstdio,\n\t\t\tshell: false\n\t\t}\n\t);\n};\n", "import { useEffect, useState } from \"react\";\nimport {\n  Action,\n  ActionPanel,\n  closeMainWindow,\n  Detail,\n  getPreferenceValues,\n  Icon,\n  List,\n  popToRoot,\n  showHUD,\n} from \"@raycast/api\";\nimport { shellHistory } from \"shell-history\";\nimport { shellEnv } from \"shell-env\";\nimport { ChildProcess, exec } from \"child_process\";\nimport { runAppleScript } from \"run-applescript\";\nimport { usePersistentState } from \"raycast-toolkit\";\nimport fs from \"fs\";\n\ninterface EnvType {\n  env: Record<string, string>;\n  cwd: string;\n  shell: string;\n}\n\ninterface ShellArguments {\n  command: string;\n}\ninterface Preferences {\n  arguments_terminal: boolean;\n  arguments_terminal_type: string;\n}\n\nlet cachedEnv: null | EnvType = null;\n\nconst getCachedEnv = async () => {\n  if (cachedEnv) {\n    return cachedEnv;\n  }\n\n  const env = await shellEnv();\n\n  cachedEnv = {\n    env: env,\n    cwd: env.HOME || `/Users/${process.env.USER}`,\n    shell: env.SHELL,\n  };\n  return cachedEnv;\n};\n\nconst Result = ({ cmd }: { cmd: string }) => {\n  const [output, setOutput] = useState<string>(\"\");\n  const [finished, setFinished] = useState<boolean>(false);\n\n  useEffect(() => {\n    let killed = false;\n    let child: ChildProcess | null = null;\n\n    const runCommand = async () => {\n      const execEnv = await getCachedEnv();\n      child = exec(cmd, execEnv);\n      child.stderr?.on(\"data\", (data: string) => {\n        if (killed) {\n          return;\n        }\n        setOutput((out) => `${out}${data}`);\n      });\n      child.stdout?.on(\"data\", (data: string) => {\n        if (killed) {\n          return;\n        }\n        setOutput((out) => `${out}${data}`);\n      });\n      child.on(\"exit\", () => {\n        if (killed) {\n          return;\n        }\n        setFinished(true);\n      });\n    };\n    runCommand();\n\n    return function cleanup() {\n      killed = true;\n      if (child !== null) {\n        child.kill(\"SIGTERM\");\n      }\n    };\n  }, [cmd, setOutput, setFinished]);\n\n  return (\n    <Detail\n      markdown={\"```\\n$ \" + cmd + \" \\n\" + output + \"\\n```\"}\n      isLoading={!finished}\n      actions={\n        <ActionPanel>\n          <Action.CopyToClipboard content={output} shortcut={{ modifiers: [\"cmd\"], key: \"c\" }} />\n        </ActionPanel>\n      }\n    />\n  );\n};\n\nconst runInIterm = (command: string) => {\n  const script = `\n    -- Set this property to true to open in a new window instead of a new tab\n    property open_in_new_window : false\n\n    on new_window()\n    \ttell application \"iTerm\" to create window with default profile\n    end new_window\n\n    on new_tab()\n    \ttell application \"iTerm\" to tell the first window to create tab with default profile\n    end new_tab\n\n    on call_forward()\n    \ttell application \"iTerm\" to activate\n    end call_forward\n\n    on is_running()\n    \tapplication \"iTerm\" is running\n    end is_running\n\n    on is_processing()\n    \ttell application \"iTerm\" to tell the first window to tell current session to get is processing\n    end is_processing\n\n    on has_windows()\n    \tif not is_running() then return false\n    \tif windows of application \"iTerm\" is {} then return false\n    \ttrue\n    end has_windows\n\n    on send_text(custom_text)\n    \ttell application \"iTerm\" to tell the first window to tell current session to write text custom_text\n    end send_text\n\n    -- Main\n    if has_windows() then\n    \t-- Open the command in the current session unless it has a running command, e.g., ssh or top\n    \tif is_processing() then\n    \t\tif open_in_new_window then\n    \t\t\tnew_window()\n    \t\telse\n    \t\t\tnew_tab()\n    \t\tend if\n    \tend if\n    else\n    \t-- If iTerm is not running and we tell it to create a new window, we get two\n    \t-- One from opening the application, and the other from the command\n    \tif is_running() then\n    \t\tnew_window()\n    \telse\n    \t\tcall_forward()\n    \tend if\n    end if\n\n    if is_running() then\n      new_tab()\n    else\n      -- Make sure a window exists before we continue, or the write may fail\n      repeat until has_windows()\n        delay 0.01\n      end repeat\n    end\n\n    send_text(\"${command.replaceAll('\"', '\\\\\"')}\")\n    call_forward()\n  `;\n\n  runAppleScript(script);\n};\n\nconst runInWarp = (command: string) => {\n  const script = `\n      -- For the latest version:\n      -- https://github.com/DavidMChan/custom-alfred-warp-scripts\n\n      -- Set this property to true to always open in a new window\n      property open_in_new_window : true\n\n      -- Set this property to true to always open in a new tab\n      property open_in_new_tab : false\n\n      -- Don't change this :)\n      property opened_new_window : false\n\n      -- Handlers\n      on new_window()\n          tell application \"System Events\" to tell process \"Warp\"\n              click menu item \"New Window\" of menu \"File\" of menu bar 1\n              set frontmost to true\n          end tell\n      end new_window\n\n      on new_tab()\n          tell application \"System Events\" to tell process \"Warp\"\n              click menu item \"New Tab\" of menu \"File\" of menu bar 1\n              set frontmost to true\n          end tell\n      end new_tab\n\n      on call_forward()\n          tell application \"Warp\" to activate\n      end call_forward\n\n      on is_running()\n          application \"Warp\" is running\n      end is_running\n\n      on has_windows()\n          if not is_running() then return false\n          tell application \"System Events\"\n              if windows of process \"Warp\" is {} then return false\n          end tell\n          true\n      end has_windows\n\n      on send_text(custom_text)\n          tell application \"System Events\"\n              keystroke custom_text\n          end tell\n      end send_text\n\n\n      -- Main\n      if not is_running() then\n          call_forward()\n          set opened_new_window to true\n      else\n          call_forward()\n          set opened_new_window to false\n      end if\n\n      if has_windows() then\n          if open_in_new_window and not opened_new_window then\n              new_window()\n          else if open_in_new_tab and not opened_new_window then\n              new_tab()\n          end if\n      else\n          new_window()\n      end if\n\n\n      -- Make sure a window exists before we continue, or the write may fail\n      repeat until has_windows()\n          delay 0.5\n      end repeat\n      delay 0.5\n\n      send_text(\"${command}\")\n      call_forward()\n  `;\n\n  runAppleScript(script);\n};\n\nconst runInTerminal = (command: string) => {\n  const script = `\n  tell application \"Terminal\"\n    do script \"${command.replaceAll('\"', '\\\\\"')}\"\n    activate\n  end tell\n  `;\n\n  runAppleScript(script);\n};\n\nexport default function Command(props: { arguments?: ShellArguments }) {\n  const [cmd, setCmd] = useState<string>(\"\");\n  const [history, setHistory] = useState<string[]>();\n  const [recentlyUsed, setRecentlyUsed] = usePersistentState<string[]>(\"recently-used\", []);\n  const iTermInstalled = fs.existsSync(\"/Applications/iTerm.app\");\n  const WarpInstalled = fs.existsSync(\"/Applications/Warp.app\");\n\n  const addToRecentlyUsed = (command: string) => {\n    setRecentlyUsed((list) => (list.find((x) => x === command) ? list : [command, ...list].slice(0, 10)));\n  };\n\n  useEffect(() => {\n    setHistory([...new Set(shellHistory().reverse())] as string[]);\n  }, [setHistory]);\n\n  const { arguments_terminal_type: terminalType, arguments_terminal: openInTerminal } =\n    getPreferenceValues<Preferences>();\n\n  useEffect(() => {\n    if (props.arguments?.command && openInTerminal) {\n      addToRecentlyUsed(props.arguments.command);\n      showHUD(\"Ran command in \" + terminalType);\n      popToRoot();\n      closeMainWindow();\n      if (terminalType == \"iTerm\") {\n        runInIterm(props.arguments.command);\n      } else if (terminalType == \"Warp\") {\n        runInWarp(props.arguments.command);\n      } else {\n        runInTerminal(props.arguments.command);\n      }\n    }\n  }, [props.arguments]);\n\n  if (props.arguments?.command) {\n    if (openInTerminal) {\n      return null;\n    }\n    return <Result cmd={props.arguments.command} />;\n  }\n\n  const categories = [];\n\n  if (cmd) {\n    categories.push({\n      category: \"New command\",\n      items: [cmd],\n    });\n  }\n\n  if (recentlyUsed.length > 0) {\n    categories.push({\n      category: \"Raycast History\",\n      items: recentlyUsed.filter((item) => item.includes(cmd)).slice(0, 50),\n    });\n  }\n\n  if (history !== undefined && history.length > 0) {\n    categories.push({\n      category: \"Bash History\",\n      items: history.filter((item) => item.includes(cmd)).slice(0, 50),\n    });\n  }\n\n  return (\n    <List\n      isLoading={history === undefined}\n      enableFiltering={false}\n      onSearchTextChange={setCmd}\n      navigationTitle=\"Shell command\"\n      searchBarPlaceholder=\"Enter shell-command\"\n    >\n      {categories.map((category) => (\n        <List.Section title={category.category} key={category.category}>\n          {category.items.map((command, index) => (\n            <List.Item\n              icon={Icon.Terminal}\n              title={command}\n              key={index}\n              actions={\n                <ActionPanel>\n                  <Action.Push\n                    title=\"Execute\"\n                    icon={Icon.List}\n                    onPush={() => addToRecentlyUsed(command)}\n                    target={<Result cmd={command} />}\n                  />\n                  {iTermInstalled ? (\n                    <Action\n                      title=\"Execute in iTerm.app\"\n                      icon={Icon.Window}\n                      onAction={() => {\n                        closeMainWindow();\n                        popToRoot();\n                        addToRecentlyUsed(command);\n                        runInIterm(command);\n                      }}\n                    />\n                  ) : null}\n                  {WarpInstalled ? (\n                    <Action\n                      title=\"Execute in Warp.app\"\n                      icon={Icon.Window}\n                      onAction={() => {\n                        closeMainWindow();\n                        popToRoot();\n                        addToRecentlyUsed(command);\n                        runInWarp(command);\n                      }}\n                    />\n                  ) : null}\n                  <Action\n                    title=\"Execute in Terminal.app\"\n                    icon={Icon.Window}\n                    onAction={() => {\n                      closeMainWindow();\n                      popToRoot();\n                      addToRecentlyUsed(command);\n                      runInTerminal(command);\n                    }}\n                  />\n                  <Action.CopyToClipboard\n                    title=\"Copy to Clipboard\"\n                    content={command}\n                    onCopy={() => {\n                      addToRecentlyUsed(command);\n                    }}\n                  />\n                </ActionPanel>\n              }\n            />\n          ))}\n        </List.Section>\n      ))}\n    </List>\n  );\n}\n", "import os from 'os';\nimport fs from 'fs';\nimport path from 'path';\nimport childProcess from 'child_process';\n\nexport function parseShellHistory(string) {\n\tconst reBashHistory = /^: \\d+:0;/;\n\n\treturn string.trim().split('\\n').map(line => {\n\t\tif (reBashHistory.test(line)) {\n\t\t\treturn line.split(';').slice(1).join(';');\n\t\t}\n\n\t\t// ZSH just places one command on each line\n\t\treturn line;\n\t});\n}\n\nexport function shellHistoryPath({extraPaths = []} = {}) {\n\tif (process.env.HISTFILE) {\n\t\treturn process.env.HISTFILE;\n\t}\n\n\tconst homeDir = os.homedir();\n\n\tconst paths = new Set([\n\t\tpath.join(homeDir, '.bash_history'),\n\t\tpath.join(homeDir, '.zsh_history'),\n\t\tpath.join(homeDir, '.history')\n\t]);\n\n\tfor (const path of extraPaths) {\n\t\tpaths.add(path);\n\t}\n\n\tconst filterdHistoryPath = () => {\n\t\tlet largestFile;\n\t\tlet size = 0;\n\n\t\tfor (const path of paths) {\n\t\t\tif (!fs.existsSync(path)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (fs.statSync(path).size > size) {\n\t\t\t\tsize = fs.statSync(path).size;\n\t\t\t\tlargestFile = path;\n\t\t\t}\n\t\t}\n\n\t\treturn largestFile;\n\t};\n\n\treturn filterdHistoryPath();\n}\n\nexport function shellHistory(options = {}) {\n\tif (process.platform === 'win32') {\n\t\tconst historyPath = shellHistoryPath(options);\n\t\tif (historyPath) {\n\t\t\treturn parseShellHistory(fs.readFileSync(historyPath, 'utf8'));\n\t\t}\n\n\t\tconst {stdout} = childProcess.spawnSync('doskey', ['/history'], {encoding: 'utf8'});\n\t\treturn stdout.trim().split('\\r\\n');\n\t}\n\n\treturn parseShellHistory(fs.readFileSync(shellHistoryPath(options), 'utf8'));\n}\n", "import process from 'node:process';\nimport execa from 'execa';\nimport stripAnsi from 'strip-ansi';\nimport defaultShell from 'default-shell';\n\nconst args = [\n\t'-ilc',\n\t'echo -n \"_SHELL_ENV_DELIMITER_\"; env; echo -n \"_SHELL_ENV_DELIMITER_\"; exit',\n];\n\nconst env = {\n\t// Disables Oh My Zsh auto-update thing that can block the process.\n\tDISABLE_AUTO_UPDATE: 'true',\n};\n\nconst parseEnv = env => {\n\tenv = env.split('_SHELL_ENV_DELIMITER_')[1];\n\tconst returnValue = {};\n\n\tfor (const line of stripAnsi(env).split('\\n').filter(line => Boolean(line))) {\n\t\tconst [key, ...values] = line.split('=');\n\t\treturnValue[key] = values.join('=');\n\t}\n\n\treturn returnValue;\n};\n\nexport async function shellEnv(shell) {\n\tif (process.platform === 'win32') {\n\t\treturn process.env;\n\t}\n\n\ttry {\n\t\tconst {stdout} = await execa(shell || defaultShell, args, {env});\n\t\treturn parseEnv(stdout);\n\t} catch (error) {\n\t\tif (shell) {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn process.env;\n\t\t}\n\t}\n}\n\nexport function shellEnvSync(shell) {\n\tif (process.platform === 'win32') {\n\t\treturn process.env;\n\t}\n\n\ttry {\n\t\tconst {stdout} = execa.sync(shell || defaultShell, args, {env});\n\t\treturn parseEnv(stdout);\n\t} catch (error) {\n\t\tif (shell) {\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn process.env;\n\t\t}\n\t}\n}\n", "export default function ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n", "import ansiRegex from 'ansi-regex';\n\nexport default function stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\treturn string.replace(ansiRegex(), '');\n}\n", "import process from 'node:process';\nimport {userInfo} from 'node:os';\n\nexport const detectDefaultShell = () => {\n\tconst {env} = process;\n\n\tif (process.platform === 'win32') {\n\t\treturn env.COMSPEC || 'cmd.exe';\n\t}\n\n\ttry {\n\t\tconst {shell} = userInfo();\n\t\tif (shell) {\n\t\t\treturn shell;\n\t\t}\n\t} catch {}\n\n\tif (process.platform === 'darwin') {\n\t\treturn env.SHELL || '/bin/zsh';\n\t}\n\n\treturn env.SHELL || '/bin/sh';\n};\n\n// Stores default shell when imported.\nconst defaultShell = detectDefaultShell();\n\nexport default defaultShell;\n", "import process from 'node:process';\nimport execa from 'execa';\n\nexport async function runAppleScript(script) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst {stdout} = await execa('osascript', ['-e', script]);\n\treturn stdout;\n}\n\nexport function runAppleScriptSync(script) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst {stdout} = execa.sync('osascript', ['-e', script]);\n\treturn stdout;\n}\n", "import * as React from 'react';\nimport { useCallback } from 'react';\nimport { runAppleScript } from 'run-applescript';\nimport { Action } from '@raycast/api';\nexport const SelectFile = ({ onSelect, prompt = 'Please select a file', type, ...props }) => {\n    const handleSelectFromFinder = useCallback(async () => {\n        const path = await runAppleScript(`\n      set chosenFile to choose file with prompt \"${prompt}:\"${type != null ? `of type {\"${type}\"}` : ''}\n      set raycastPath to POSIX path of (path to application \"Raycast\")\n      do shell script \"open \" & raycastPath\n      return POSIX path of chosenFile\n    `);\n        if (path) {\n            onSelect(path);\n        }\n    }, []);\n    return React.createElement(Action, { ...props, onAction: handleSelectFromFinder });\n};\n", "import { LocalStorage } from '@raycast/api';\nimport { useEffect, useState, useCallback, } from 'react';\nexport function usePersistentState(key, initialValue) {\n    const [loading, setLoading] = useState(true);\n    const [state, setState] = useState(initialValue);\n    useEffect(() => {\n        // FIXME In the future version, we don't need didUnmount checking\n        // https://github.com/facebook/react/pull/22114\n        let didUnmount = false;\n        (async () => {\n            const cache = await LocalStorage.getItem(key);\n            if (typeof cache === 'string') {\n                if (!didUnmount) {\n                    setState(JSON.parse(cache));\n                }\n            }\n            setLoading(false);\n        })();\n        return () => {\n            didUnmount = true;\n        };\n    }, []);\n    const setStateAndLocalStorage = useCallback((updater) => {\n        setState((state) => {\n            const newValue = typeof updater === 'function' ? updater(state) : updater;\n            LocalStorage.setItem(key, JSON.stringify(newValue));\n            return newValue;\n        });\n    }, []);\n    return [state, setStateAndLocalStorage, loading];\n}\n"],
  "mappings": "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",
  "names": ["require_windows", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "checkPathExt", "path", "options", "pathext", "i", "p", "checkStat", "stat", "cb", "er", "require_mode", "__commonJSMin", "exports", "module", "isexe", "sync", "fs", "path", "options", "cb", "er", "stat", "checkStat", "checkMode", "mod", "uid", "gid", "myUid", "myGid", "u", "g", "o", "ug", "ret", "require_isexe", "__commonJSMin", "exports", "module", "fs", "core", "isexe", "sync", "path", "options", "cb", "resolve", "reject", "er", "is", "require_which", "__commonJSMin", "exports", "module", "isWindows", "path", "COLON", "isexe", "getNotFoundError", "cmd", "getPathInfo", "opt", "colon", "pathEnv", "pathExtExe", "pathExt", "which", "cb", "found", "step", "i", "resolve", "reject", "ppRaw", "pathPart", "pCmd", "p", "subStep", "ii", "ext", "er", "is", "res", "whichSync", "j", "cur", "require_path_key", "__commonJSMin", "exports", "module", "pathKey", "options", "environment", "key", "require_resolveCommand", "__commonJSMin", "exports", "module", "path", "which", "getPathKey", "resolveCommandAttempt", "parsed", "withoutPathExt", "env", "cwd", "hasCustomCwd", "shouldSwitchCwd", "resolved", "resolveCommand", "require_escape", "__commonJSMin", "exports", "module", "metaCharsRegExp", "escapeCommand", "arg", "escapeArgument", "doubleEscapeMetaChars", "require_shebang_regex", "__commonJSMin", "exports", "module", "require_shebang_command", "__commonJSMin", "exports", "module", "shebangRegex", "string", "match", "path", "argument", "binary", "require_readShebang", "__commonJSMin", "exports", "module", "fs", "shebangCommand", "readShebang", "command", "buffer", "fd", "require_parse", "__commonJSMin", "exports", "module", "path", "resolveCommand", "escape", "readShebang", "isWin", "isExecutableRegExp", "isCmdShimRegExp", "detectShebang", "parsed", "shebang", "parseNonShell", "commandFile", "needsShell", "needsDoubleEscapeMetaChars", "arg", "shellCommand", "parse", "command", "args", "options", "require_enoent", "__commonJSMin", "exports", "module", "isWin", "notFoundError", "original", "syscall", "hookChildProcess", "cp", "parsed", "originalEmit", "name", "arg1", "err", "verifyENOENT", "status", "verifyENOENTSync", "require_cross_spawn", "__commonJSMin", "exports", "module", "cp", "parse", "enoent", "spawn", "command", "args", "options", "parsed", "spawned", "spawnSync", "result", "require_strip_final_newline", "__commonJSMin", "exports", "module", "input", "LF", "CR", "require_npm_run_path", "__commonJSMin", "exports", "module", "path", "pathKey", "npmRunPath", "options", "previous", "cwdPath", "result", "execPathDir", "env", "require_mimic_fn", "__commonJSMin", "exports", "module", "mimicFn", "to", "from", "prop", "require_onetime", "__commonJSMin", "exports", "module", "mimicFn", "calledFunctions", "onetime", "function_", "options", "returnValue", "callCount", "functionName", "arguments_", "SIGNALS", "name", "number", "action", "description", "standard", "forced", "exports", "getRealtimeSignals", "length", "SIGRTMAX", "SIGRTMIN", "Array", "from", "getRealtimeSignal", "exports", "value", "index", "name", "number", "action", "description", "standard", "_os", "_core", "_realtime", "getSignals", "realtimeSignals", "SIGNALS", "map", "normalizeSignal", "exports", "name", "number", "defaultNumber", "description", "action", "forced", "standard", "signals", "constantSignal", "constants", "supported", "undefined", "_os", "_signals", "_realtime", "getSignalsByName", "reduce", "getSignalByName", "signalByNameMemo", "name", "number", "description", "supported", "action", "forced", "standard", "signalsByName", "exports", "getSignalsByNumber", "signals", "length", "SIGRTMAX", "signalsA", "Array", "from", "value", "getSignalByNumber", "Object", "assign", "signal", "findSignalByNumber", "undefined", "find", "constants", "signalA", "signalsByNumber", "require_error", "__commonJSMin", "exports", "module", "signalsByName", "getErrorPrefix", "timedOut", "timeout", "errorCode", "signal", "signalDescription", "exitCode", "isCanceled", "makeError", "stdout", "stderr", "all", "error", "command", "escapedCommand", "killed", "execaMessage", "isError", "shortMessage", "message", "require_stdio", "__commonJSMin", "exports", "module", "aliases", "hasAlias", "options", "alias", "normalizeStdio", "stdio", "length", "value", "index", "require_signals", "__commonJSMin", "exports", "module", "require_signal_exit", "__commonJSMin", "exports", "module", "process", "processOk", "assert", "signals", "isWin", "EE", "emitter", "cb", "opts", "loaded", "load", "ev", "remove", "unload", "sig", "sigListeners", "originalProcessEmit", "originalProcessReallyExit", "emit", "event", "code", "signal", "listeners", "processEmit", "processReallyExit", "arg", "ret", "require_kill", "__commonJSMin", "exports", "module", "os", "onExit", "DEFAULT_FORCE_KILL_TIMEOUT", "spawnedKill", "kill", "signal", "options", "killResult", "setKillTimeout", "shouldForceKill", "timeout", "getForceKillAfterTimeout", "t", "forceKillAfterTimeout", "isSigterm", "spawnedCancel", "spawned", "context", "timeoutKill", "reject", "setupTimeout", "killSignal", "spawnedPromise", "timeoutId", "timeoutPromise", "resolve", "safeSpawnedPromise", "validateTimeout", "setExitHandler", "cleanup", "detached", "timedPromise", "removeExitHandler", "require_is_stream", "__commonJSMin", "exports", "module", "isStream", "stream", "require_buffer_stream", "__commonJSMin", "exports", "module", "PassThroughStream", "options", "array", "encoding", "isBuffer", "objectMode", "stream", "length", "chunks", "chunk", "require_get_stream", "__commonJSMin", "exports", "module", "BufferConstants", "stream", "promisify", "bufferStream", "streamPipelinePromisified", "MaxBufferError", "getStream", "inputStream", "options", "maxBuffer", "resolve", "reject", "rejectPromise", "error", "require_merge_stream", "__commonJSMin", "exports", "module", "PassThrough", "sources", "output", "add", "isEmpty", "remove", "source", "it", "require_stream", "__commonJSMin", "exports", "module", "isStream", "getStream", "mergeStream", "handleInput", "spawned", "input", "makeAllStream", "all", "mixed", "getBufferedData", "stream", "streamPromise", "error", "getStreamPromise", "encoding", "buffer", "maxBuffer", "getSpawnedResult", "stdout", "stderr", "processDone", "stdoutPromise", "stderrPromise", "allPromise", "validateInputSync", "require_promise", "__commonJSMin", "exports", "module", "nativePromisePrototype", "descriptors", "property", "mergePromise", "spawned", "promise", "descriptor", "value", "args", "getSpawnedPromise", "resolve", "reject", "exitCode", "signal", "error", "require_command", "__commonJSMin", "exports", "module", "normalizeArgs", "file", "args", "NO_ESCAPE_REGEXP", "DOUBLE_QUOTES_REGEXP", "escapeArg", "arg", "joinCommand", "getEscapedCommand", "SPACES_REGEXP", "parseCommand", "command", "tokens", "token", "previousToken", "require_execa", "__commonJSMin", "exports", "module", "path", "childProcess", "crossSpawn", "stripFinalNewline", "npmRunPath", "onetime", "makeError", "normalizeStdio", "spawnedKill", "spawnedCancel", "setupTimeout", "validateTimeout", "setExitHandler", "handleInput", "getSpawnedResult", "makeAllStream", "validateInputSync", "mergePromise", "getSpawnedPromise", "joinCommand", "parseCommand", "getEscapedCommand", "DEFAULT_MAX_BUFFER", "getEnv", "envOption", "extendEnv", "preferLocal", "localDir", "execPath", "env", "handleArguments", "file", "args", "options", "parsed", "handleOutput", "value", "error", "execa", "command", "escapedCommand", "spawned", "dummySpawned", "errorPromise", "spawnedPromise", "timedPromise", "processDone", "context", "handlePromiseOnce", "exitCode", "signal", "timedOut", "stdoutResult", "stderrResult", "allResult", "stdout", "stderr", "all", "returnedError", "result", "scriptPath", "stdio", "defaultExecArgv", "arg", "nodePath", "nodeOptions", "src_exports", "__export", "Command", "__toCommonJS", "import_react", "import_api", "import_os", "import_fs", "import_path", "import_child_process", "parseShellHistory", "string", "reBashHistory", "line", "shellHistoryPath", "extraPaths", "homeDir", "os", "paths", "path", "largestFile", "size", "fs", "shellHistory", "options", "historyPath", "stdout", "childProcess", "import_node_process", "import_execa", "ansiRegex", "onlyFirst", "pattern", "stripAnsi", "string", "ansiRegex", "import_node_process", "import_node_os", "detectDefaultShell", "env", "process", "shell", "defaultShell", "default_shell_default", "args", "env", "parseEnv", "returnValue", "line", "stripAnsi", "key", "values", "shellEnv", "shell", "process", "stdout", "execa", "default_shell_default", "error", "import_child_process", "import_node_process", "import_execa", "runAppleScript", "script", "process", "stdout", "execa", "React", "import_react", "import_api", "import_api", "import_react", "usePersistentState", "key", "initialValue", "loading", "setLoading", "state", "setState", "didUnmount", "cache", "setStateAndLocalStorage", "updater", "newValue", "import_fs", "import_jsx_runtime", "cachedEnv", "getCachedEnv", "env", "shellEnv", "Result", "cmd", "output", "setOutput", "finished", "setFinished", "killed", "child", "execEnv", "data", "out", "runInIterm", "command", "script", "runAppleScript", "runInWarp", "runInTerminal", "Command", "props", "setCmd", "history", "setHistory", "recentlyUsed", "setRecentlyUsed", "usePersistentState", "iTermInstalled", "fs", "WarpInstalled", "addToRecentlyUsed", "list", "shellHistory", "terminalType", "openInTerminal", "categories", "item", "category", "index"]
}
