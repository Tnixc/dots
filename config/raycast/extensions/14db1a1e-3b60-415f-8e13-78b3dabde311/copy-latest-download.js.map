{
  "version": 3,
  "sources": ["../node_modules/untildify/index.js", "../src/copy-latest-download.tsx", "../src/utils.tsx"],
  "sourcesContent": ["'use strict';\nconst os = require('os');\n\nconst homeDirectory = os.homedir();\n\nmodule.exports = pathWithTilde => {\n\tif (typeof pathWithTilde !== 'string') {\n\t\tthrow new TypeError(`Expected a string, got ${typeof pathWithTilde}`);\n\t}\n\n\treturn homeDirectory ? pathWithTilde.replace(/^~(?=$|\\/|\\\\)/, homeDirectory) : pathWithTilde;\n};\n", "import { popToRoot, showHUD } from \"@raycast/api\";\nimport { getLatestDownload, hasAccessToDownloadsFolder as hasAccessToDownloadsFolder } from \"./utils\";\nimport { Clipboard } from \"@raycast/api\";\nimport { closeMainWindow } from \"@raycast/api\";\n\nexport default async function main() {\n  if (!hasAccessToDownloadsFolder()) {\n    await showHUD(\"No permission to access the downloads folder\");\n    return;\n  }\n\n  const download = getLatestDownload();\n  if (!download) {\n    await showHUD(\"No downloads found\");\n    return;\n  }\n\n  await Clipboard.copy({ file: download.path });\n\n  await closeMainWindow();\n  await showHUD(\"Copied latest download to clipboard\");\n  await popToRoot();\n}\n", "import { Action, ActionPanel, Detail, getPreferenceValues } from \"@raycast/api\";\nimport { accessSync, constants, readdirSync, statSync } from \"fs\";\nimport { join } from \"path\";\nimport { ComponentType } from \"react\";\nimport untildify from \"untildify\";\n\nconst preferences: Preferences = getPreferenceValues();\nexport const downloadsFolder = untildify(preferences.downloadsFolder ?? \"~/Downloads\");\n\nexport function getDownloads() {\n  const files = readdirSync(downloadsFolder);\n  return files\n    .filter((file) => !file.startsWith(\".\"))\n    .map((file) => {\n      const path = join(downloadsFolder, file);\n      const lastModifiedAt = statSync(path).mtime;\n      return { file, path, lastModifiedAt };\n    })\n    .sort((a, b) => b.lastModifiedAt.getTime() - a.lastModifiedAt.getTime());\n}\n\nexport function getLatestDownload() {\n  const downloads = getDownloads();\n  if (downloads.length < 1) {\n    return undefined;\n  }\n\n  return downloads[0];\n}\n\nexport function hasAccessToDownloadsFolder() {\n  try {\n    accessSync(preferences.downloadsFolder, constants.R_OK);\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\nexport const withAccessToDownloadsFolder = <P extends object>(Component: ComponentType<P>) => {\n  return (props: P) => {\n    if (hasAccessToDownloadsFolder()) {\n      accessSync(preferences.downloadsFolder, constants.R_OK);\n      return <Component {...props} />;\n    } else {\n      const markdown = `## Permission Required\\n\\nThe Downloads Manager extension requires access to your Downloads folder. Please grant permission to use it.\\n\\n![Grant Permission](permission.png)`;\n      return (\n        <Detail\n          markdown={markdown}\n          actions={\n            <ActionPanel>\n              <Action.Open\n                title=\"Grant Permission\"\n                target=\"x-apple.systempreferences:com.apple.preference.security?Privacy_AllFiles\"\n              />\n            </ActionPanel>\n          }\n        />\n      );\n    }\n  };\n};\n"],
  "mappings": "onBAAA,IAAAA,EAAAC,EAAA,CAAAC,EAAAC,IAAA,cACA,IAAMC,EAAK,QAAQ,IAAI,EAEjBC,EAAgBD,EAAG,QAAQ,EAEjCD,EAAO,QAAUG,GAAiB,CACjC,GAAI,OAAOA,GAAkB,SAC5B,MAAM,IAAI,UAAU,0BAA0B,OAAOA,GAAe,EAGrE,OAAOD,EAAgBC,EAAc,QAAQ,gBAAiBD,CAAa,EAAIC,CAChF,ICXA,IAAAC,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAmC,wBCAnC,IAAAC,EAAiE,wBACjEC,EAA6D,cAC7DC,EAAqB,gBAErBC,EAAsB,OAwCTC,EAAA,6BAtCPC,KAA2B,uBAAoB,EACxCC,KAAkB,EAAAC,SAAUF,EAAY,iBAAmB,aAAa,EAE9E,SAASG,GAAe,CAE7B,SADc,eAAYF,CAAe,EAEtC,OAAQG,GAAS,CAACA,EAAK,WAAW,GAAG,CAAC,EACtC,IAAKA,GAAS,CACb,IAAMC,KAAO,QAAKJ,EAAiBG,CAAI,EACjCE,KAAiB,YAASD,CAAI,EAAE,MACtC,MAAO,CAAE,KAAAD,EAAM,KAAAC,EAAM,eAAAC,CAAe,CACtC,CAAC,EACA,KAAK,CAACC,EAAGC,IAAMA,EAAE,eAAe,QAAQ,EAAID,EAAE,eAAe,QAAQ,CAAC,CAC3E,CAEO,SAASE,GAAoB,CAClC,IAAMC,EAAYP,EAAa,EAC/B,GAAI,EAAAO,EAAU,OAAS,GAIvB,OAAOA,EAAU,CAAC,CACpB,CAEO,SAASC,GAA6B,CAC3C,GAAI,CACF,uBAAWX,EAAY,gBAAiB,YAAU,IAAI,EAC/C,EACT,OAASY,EAAP,CACA,eAAQ,MAAMA,CAAK,EACZ,EACT,CACF,CDpCA,IAAAC,EAA0B,wBAC1BA,EAAgC,wBAEhC,eAAOC,GAA8B,CACnC,GAAI,CAACC,EAA2B,EAAG,CACjC,QAAM,WAAQ,8CAA8C,EAC5D,OAGF,IAAMC,EAAWC,EAAkB,EACnC,GAAI,CAACD,EAAU,CACb,QAAM,WAAQ,oBAAoB,EAClC,OAGF,MAAM,YAAU,KAAK,CAAE,KAAMA,EAAS,IAAK,CAAC,EAE5C,QAAM,mBAAgB,EACtB,QAAM,WAAQ,qCAAqC,EACnD,QAAM,aAAU,CAClB",
  "names": ["require_untildify", "__commonJSMin", "exports", "module", "os", "homeDirectory", "pathWithTilde", "copy_latest_download_exports", "__export", "main", "__toCommonJS", "import_api", "import_api", "import_fs", "import_path", "import_untildify", "import_jsx_runtime", "preferences", "downloadsFolder", "untildify", "getDownloads", "file", "path", "lastModifiedAt", "a", "b", "getLatestDownload", "downloads", "hasAccessToDownloadsFolder", "error", "import_api", "main", "hasAccessToDownloadsFolder", "download", "getLatestDownload"]
}
